{"version":3,"file":"Discworld.js","names":["centuries","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","DiscworldCalendar","CalendarBase","constructor","language","localisations","leapYear","yearOrDate","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","daysInYear","daysInMonth","month","m","invalidMonth","notDay","daysPerMonth","daysInWeek","dayOfWeek","day","d","invalidDate","weekDay","dow","extraInfo","y","century","Math","floor","toJD","jdEpoch","fromJD","jd","year","date","register"],"sources":["../src/Discworld.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Discworld calendar - Unseen University version.\r\n   See also http://wiki.lspace.org/mediawiki/Discworld_calendar\r\n   and http://discworld.wikia.com/wiki/Discworld_calendar.\r\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) May 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CDate } from './Calendars'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\n// Names of the centuries\r\nconst centuries: string[] = []\r\ncenturies[20] = 'Fruitbat'\r\ncenturies[21] = 'Anchovy'\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Discworld',\r\n  epochs: ['BUC', 'UC'],\r\n  monthNames: ['Ick', 'Offle', 'February', 'March', 'April', 'May', 'June',\r\n    'Grune', 'August', 'Spune', 'Sektober', 'Ember', 'December'],\r\n  monthNamesShort: ['Ick', 'Off', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Gru', 'Aug', 'Spu', 'Sek', 'Emb', 'Dec'],\r\n  dayNames: ['Sunday', 'Octeday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  dayNamesShort: ['Sun', 'Oct', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  dayNamesMin: ['Su', 'Oc', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n  dateFormat: 'yyyy/mm/dd',\r\n  firstDay: 2,\r\n  isRTL: false\r\n}\r\n\r\nclass DiscworldCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Discworld epoch: 1 January 0001 CE (Gregorian)\r\n    super('Discworld', 1721425.5, DiscworldCalendar.localisations, language,\r\n      [16, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32], 13)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return false\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return 400\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return this.daysPerMonth[m - 1]\r\n  }\r\n\r\n  // Retrieve the number of days in a week.\r\n  daysInWeek (): number {\r\n    return 8\r\n  }\r\n\r\n  // Retrieve the day of the week for a date.\r\n  dayOfWeek(date: CDate): number;\r\n  dayOfWeek(year: number, month: number, day: number): number;\r\n  dayOfWeek (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [, , d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return (d + 1) % 8\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow >= 2 && dow <= 6\r\n  }\r\n\r\n  // Retrieve additional information about a date - contents depends on calendar.\r\n  extraInfo(date: CDate): Object;\r\n  extraInfo(year: number, month: number, day: number): Object;\r\n  extraInfo (yearOrDate: CDate | number, month?: number, day?: number): Object {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return { century: centuries[Math.floor((y - 1) / 100) + 1] || '' }\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    if (y < 0) { y++ }\r\n    return d + (m > 1 ? 16 : 0) + (m > 2 ? (m - 2) * 32 : 0) + (y - 1) * 400 + this.jdEpoch - 1\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    jd = Math.floor(jd + 0.5) - Math.floor(this.jdEpoch) - 1\r\n    const year = Math.floor(jd / 400) + 1\r\n    jd -= (year - 1) * 400\r\n    jd += (jd > 15 ? 16 : 0)\r\n    const month = Math.floor(jd / 32) + 1\r\n    const day = jd - (month - 1) * 32 + 1\r\n    return this.date(year <= 0 ? year - 1 : year, month, day)\r\n  }\r\n}\r\n\r\nCalendars.register('discworld', DiscworldCalendar)\r\n\r\nexport { DiscworldCalendar }\r\n"],"mappings":"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"}