{"version":3,"file":"Discworld.js","names":["_Calendars","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","centuries","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","DiscworldCalendar","CalendarBase","constructor","language","arguments","length","undefined","localisations","leapYear","yearOrDate","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","daysInYear","daysInMonth","month","m","invalidMonth","notDay","daysPerMonth","daysInWeek","dayOfWeek","day","d","invalidDate","weekDay","dow","extraInfo","y","century","Math","floor","toJD","jdEpoch","fromJD","jd","year","date","exports","register"],"sources":["../src/Discworld.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Discworld calendar - Unseen University version.\r\n   See also http://wiki.lspace.org/mediawiki/Discworld_calendar\r\n   and http://discworld.wikia.com/wiki/Discworld_calendar.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) May 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CDate } from './Calendars'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\n// Names of the centuries\r\nconst centuries: string[] = []\r\ncenturies[20] = 'Fruitbat'\r\ncenturies[21] = 'Anchovy'\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Discworld',\r\n  epochs: ['BUC', 'UC'],\r\n  monthNames: ['Ick', 'Offle', 'February', 'March', 'April', 'May', 'June',\r\n    'Grune', 'August', 'Spune', 'Sektober', 'Ember', 'December'],\r\n  monthNamesShort: ['Ick', 'Off', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Gru', 'Aug', 'Spu', 'Sek', 'Emb', 'Dec'],\r\n  dayNames: ['Sunday', 'Octeday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  dayNamesShort: ['Sun', 'Oct', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  dayNamesMin: ['Su', 'Oc', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n  dateFormat: 'yyyy/mm/dd',\r\n  firstDay: 2,\r\n  isRTL: false\r\n}\r\n\r\nclass DiscworldCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Discworld epoch: 1 January 0001 CE (Gregorian)\r\n    super('Discworld', 1721425.5, DiscworldCalendar.localisations, language,\r\n      [16, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32], 13)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return false\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return 400\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return this.daysPerMonth[m - 1]\r\n  }\r\n\r\n  // Retrieve the number of days in a week.\r\n  daysInWeek (): number {\r\n    return 8\r\n  }\r\n\r\n  // Retrieve the day of the week for a date.\r\n  dayOfWeek(date: CDate): number;\r\n  dayOfWeek(year: number, month: number, day: number): number;\r\n  dayOfWeek (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [, , d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return (d + 1) % 8\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow >= 2 && dow <= 6\r\n  }\r\n\r\n  // Retrieve additional information about a date - contents depends on calendar.\r\n  extraInfo(date: CDate): Object;\r\n  extraInfo(year: number, month: number, day: number): Object;\r\n  extraInfo (yearOrDate: CDate | number, month?: number, day?: number): Object {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return { century: centuries[Math.floor((y - 1) / 100) + 1] || '' }\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    if (y < 0) { y++ }\r\n    return d + (m > 1 ? 16 : 0) + (m > 2 ? (m - 2) * 32 : 0) + (y - 1) * 400 + this.jdEpoch - 1\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    jd = Math.floor(jd + 0.5) - Math.floor(this.jdEpoch) - 1\r\n    const year = Math.floor(jd / 400) + 1\r\n    jd -= (year - 1) * 400\r\n    jd += (jd > 15 ? 16 : 0)\r\n    const month = Math.floor(jd / 32) + 1\r\n    const day = jd - (month - 1) * 32 + 1\r\n    return this.date(year <= 0 ? year - 1 : year, month, day)\r\n  }\r\n}\r\n\r\nCalendars.register('discworld', DiscworldCalendar)\r\n\r\nexport { DiscworldCalendar }\r\n"],"mappings":"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","ignoreList":[]}