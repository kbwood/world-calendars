{"version":3,"file":"Islamic.js","names":["_Calendars","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","IslamicCalendar","CalendarBase","constructor","language","arguments","length","undefined","localisations","leapYear","yearOrDate","y","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","daysInYear","daysInMonth","month","m","invalidMonth","notDay","daysPerMonth","weekDay","day","dow","dayOfWeek","toJD","d","invalidDate","Math","ceil","floor","jdEpoch","fromJD","jd","year","min","date","exports","register"],"sources":["../src/Islamic.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Islamic or '16 civil' calendar.\r\n   Based on code from http://www.iranchamber.com/calendar/converter/iranian_calendar_converter.php.\r\n   See also http://en.wikipedia.org/wiki/Islamic_calendar.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) May 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CDate } from './Calendars'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Islamic',\r\n  epochs: ['BH', 'AH'],\r\n  monthNames: ['Muharram', 'Safar', 'Rabi\\' al-awwal', 'Rabi\\' al-thani', 'Jumada al-awwal', 'Jumada al-thani',\r\n    'Rajab', 'Sha\\'aban', 'Ramadan', 'Shawwal', 'Dhu al-Qi\\'dah', 'Dhu al-Hijjah'],\r\n  monthNamesShort: ['Muh', 'Saf', 'Rab1', 'Rab2', 'Jum1', 'Jum2', 'Raj', 'Sha\\'', 'Ram', 'Shaw', 'DhuQ', 'DhuH'],\r\n  dayNames: ['Yawm al-ahad', 'Yawm al-ithnayn', 'Yawm ath-thulaathaa\\'',\r\n    'Yawm al-arbi\\'aa\\'', 'Yawm al-khamÄ«s', 'Yawm al-jum\\'a', 'Yawm as-sabt'],\r\n  dayNamesShort: ['Aha', 'Ith', 'Thu', 'Arb', 'Kha', 'Jum', 'Sab'],\r\n  dayNamesMin: ['Ah', 'It', 'Th', 'Ar', 'Kh', 'Ju', 'Sa'],\r\n  dateFormat: 'yyyy/mm/dd',\r\n  firstDay: 6,\r\n  isRTL: false\r\n}\r\n\r\nclass IslamicCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Islamic epoch: 16 July 622 CE (Gregorian).\r\n    super('Islamic', 1948439.5, IslamicCalendar.localisations, language,\r\n      [30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29])\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    let [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    if (y < 0) { y++ }; // No year zero\r\n    return (y * 11 + 14) % 30 < 11\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (this.leapYear(y) ? 355 : 354)\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return this.daysPerMonth[m - 1] + (m === 12 && this.leapYear(y) ? 1 : 0)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow !== 5\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    if (y <= 0) { y++ } // No year zero\r\n    return d + Math.ceil(29.5 * (m - 1)) + (y - 1) * 354 + Math.floor((3 + (11 * y)) / 30) + this.jdEpoch - 1\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    jd = Math.floor(jd) + 0.5\r\n    let year = Math.floor((30 * (jd - this.jdEpoch) + 10646) / 10631)\r\n    year = (year <= 0 ? year - 1 : year)\r\n    const month = Math.min(12, Math.ceil((jd - 29 - this.toJD(year, 1, 1)) / 29.5) + 1)\r\n    const day = jd - this.toJD(year, month, 1) + 1\r\n    return this.date(year, month, day)\r\n  }\r\n}\r\n\r\nCalendars.register('islamic', IslamicCalendar)\r\n\r\nexport { IslamicCalendar }\r\n"],"mappings":"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","ignoreList":[]}