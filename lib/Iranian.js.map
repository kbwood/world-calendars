{"version":3,"file":"Iranian.js","names":["_Calendars","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","div","b","mod","special","last","length","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","IranianCalendar","CalendarBase","constructor","language","arguments","undefined","localisations","leapYear","yearOrDate","y","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","yearInfo","leap","weekOfYear","month","day","checkDate","date","add","dayOfWeek","Math","floor","dayOfYear","daysInMonth","m","invalidMonth","notDay","daysPerMonth","weekDay","dow","isValid","year","validOptions","valid","toJD","d","invalidDate","info","g2d","gy","march","fromJD","jd","d2gy","diff","j","gm","error","CalendarError","replace","specDiff","prevSpec","offset","exports","register"],"sources":["../src/Iranian.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Iranian or Solar Hijri calendar.\r\n   Based on code from https://www.jqueryscript.net/demo/Iranian-Jalali-Calendar-Data-Picker-Plugin-With-jQuery-kamaDatepicker/\r\n   and information from https://www.time.ir/.\r\n   See also http://en.wikipedia.org/wiki/Solar_Hijri_calendar.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) March 2025.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CalendarError, CDate } from './Calendars'\r\nimport type { CalendarLocalisation, DateParts, RegionalLocalisations, ValidOptions } from './Calendars'\r\n\r\ntype YearInfo = {\r\n  gy: number\r\n  leap: number\r\n  march: number\r\n}\r\n\r\nconst div = (a: number, b: number): number => ~~(a / b)\r\nconst mod = (a: number, b: number): number => a - ~~(a / b) * b\r\n\r\nconst special = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181,\r\n  1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178]\r\nconst last = special.length - 1\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Iranian',\r\n  epochs: ['BSH', 'SH'],\r\n  monthNames: ['Farvardin', 'Ordibehesht', 'Khordad', 'Tir', 'Mordad', 'Shahrivar',\r\n    'Mehr', 'Aban', 'Azar', 'Dey', 'Bahman', 'Esfand'],\r\n  monthNamesShort: ['Far', 'Ord', 'Kho', 'Tir', 'Mor', 'Sha', 'Meh', 'Aba', 'Aza', 'Dey', 'Bah', 'Esf'],\r\n  dayNames: ['Yekshanbeh', 'Doshanbeh', 'Seshanbeh', 'Chahārshanbeh', 'Panjshanbeh', 'Jom\\'eh', 'Shanbeh'],\r\n  dayNamesShort: ['Yek', 'Do', 'Se', 'Cha', 'Panj', 'Jom', 'Sha'],\r\n  dayNamesMin: ['Ye', 'Do', 'Se', 'Ch', 'Pa', 'Jo', 'Sh'],\r\n  dateFormat: 'yyyy/mm/dd',\r\n  firstDay: 6,\r\n  isRTL: false\r\n}\r\n\r\nclass IranianCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Iranian epoch: 19 March 622 CE (Gregorian).\r\n    super('Iranian', 1948320.5, IranianCalendar.localisations, language,\r\n      [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29])\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return this.yearInfo(y).leap === 0\r\n  }\r\n\r\n  // Determine the week of the year for a date - ISO 8601.\r\n  weekOfYear(date: CDate): number;\r\n  weekOfYear(year: number, month: number, day: number): number;\r\n  weekOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    // Find Saturday of this week starting on Saturday\r\n    let checkDate = yearOrDate instanceof CDate\r\n      ? this.date(yearOrDate)\r\n      : this.date(yearOrDate, month as number, day as number)\r\n    checkDate = checkDate.add(-((checkDate.dayOfWeek() + 1) % 7), 'd')\r\n    return Math.floor((checkDate.dayOfYear() - 1) / 7) + 1\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return this.daysPerMonth[m - 1] + (m === 12 && this.leapYear(y) ? 1 : 0)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow !== 5\r\n  }\r\n\r\n  // Determine whether a date is valid for this calendar.\r\n  isValid (year: number, month: number, day: number, validOptions: ValidOptions = {}): boolean {\r\n    const valid = super.isValid(year, month, day, validOptions)\r\n    return valid && year >= special[0] && year < special[last]\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const info = this.yearInfo(y)\r\n    return this.g2d(info.gy, 3, info.march) + 31 * (m - 1) - div(m, 7) * (m - 7) + d - 1\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    let day, month\r\n    const gy = this.d2gy(jd)\r\n    let year = gy - 621\r\n    if (year <= 0) { year-- } // No year zero\r\n    const info = this.yearInfo(year)\r\n    let diff = jd - this.g2d(gy, 3, info.march)\r\n    if (diff >= 0) {\r\n      if (diff <= 185) {\r\n        month = div(diff, 31) + 1\r\n        day = mod(diff, 31) + 1\r\n        return this.date(year, month, day)\r\n      }\r\n      diff -= 186\r\n    } else {\r\n      year--\r\n      if (year === 0) { year-- } // No year zero\r\n      diff += 179\r\n      if (info.leap === 1) {\r\n        diff++\r\n      }\r\n    }\r\n    month = div(diff, 30) + 7\r\n    day = mod(diff, 30) + 1\r\n    return this.date(year, month, day)\r\n  }\r\n\r\n  // Convert from Julian date to Gregorian year.\r\n  protected d2gy (jd: number): number {\r\n    const i = 4 * (jd + 0.5) + 139361631 + 4 * div(3 * div(4 * (jd + 0.5) + 183187720, 146097), 4) - 3908\r\n    const j = 5 * div(mod(i, 1461), 4) + 308\r\n    const gm = mod(div(j, 153), 12) + 1\r\n    return div(i, 1461) - 100100 + div(8 - gm, 6)\r\n  }\r\n\r\n  // Convert from Gregorian details to Julian date.\r\n  protected g2d (year: number, month: number, day: number): number {\r\n    const i = div(1461 * (year + div(month - 8, 6) + 100100), 4) +\r\n      div(153 * mod(month + 9, 12) + 2, 5) + day - 34840408\r\n    return i - div(3 * div(year + 100100 + div(month - 8, 6), 100), 4) + 752 - 0.5\r\n  }\r\n\r\n  // Check that a candidate date is from the same calendar and is valid.\r\n  protected validate(error: string, date: CDate): DateParts;\r\n  protected validate(error: string, year: number, month: number, day: number, validOptions?: ValidOptions): DateParts;\r\n  protected validate (error: string, yearOrDate: CDate | number, month?: number, day?: number, validOptions?: ValidOptions): DateParts {\r\n    const [y, m, d] = yearOrDate instanceof CDate\r\n      ? super.validate(error, yearOrDate)\r\n      : super.validate(error, yearOrDate, month as number, day as number, validOptions as ValidOptions)\r\n    if (y < special[0] || y >= special[last]) {\r\n      throw new CalendarError(error.replace(/\\{0\\}/, this.local.name))\r\n    }\r\n    return [y, m, d]\r\n  }\r\n\r\n  // Provide information about a given year.\r\n  protected yearInfo (year: number): YearInfo {\r\n    let specDiff = 0\r\n    if (year < 0) { year++ } // No year zero\r\n    const gy = year + 621\r\n    let m = -14\r\n    let prevSpec = special[0]\r\n    for (let i = 1; i <= last && (specDiff = special[i] - prevSpec, special[i] <= year); i++) {\r\n      m += 8 * div(specDiff, 33) + div(mod(specDiff, 33), 4)\r\n      prevSpec = special[i]\r\n    }\r\n    let offset = year - prevSpec\r\n    m += 8 * div(offset, 33) + div(mod(offset, 33) + 3, 4)\r\n    if (mod(specDiff, 33) === 4 && specDiff - offset === 4) {\r\n      m++\r\n    }\r\n    const r = div(gy, 4) - div(3 * (div(gy, 100) + 1), 4) - 150\r\n    const march = 20 + m - r\r\n    if (specDiff - offset < 6) {\r\n      offset = offset - specDiff + 33 * div(specDiff + 4, 33)\r\n    }\r\n    let leap = mod(mod(offset + 1, 33) - 1, 4)\r\n    leap = (leap === -1 ? 4 : leap)\r\n    return { gy, leap, march }\r\n  }\r\n}\r\n\r\nCalendars.register('iranian', IranianCalendar)\r\n\r\nexport { IranianCalendar }\r\n"],"mappings":"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","ignoreList":[]}