{"version":3,"file":"Julian.js","names":["_Calendars","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","JulianCalendar","CalendarBase","constructor","language","arguments","length","undefined","localisations","leapYear","yearOrDate","y","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","weekOfYear","month","day","checkDate","date","add","dayOfWeek","Math","floor","dayOfYear","daysInMonth","m","invalidMonth","notDay","daysPerMonth","weekDay","dow","toJD","d","invalidDate","fromJD","jd","b","c","year","exports","register"],"sources":["../src/Julian.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Julian calendar.\r\n   Based on code from http://www.fourmilab.ch/documents/calendar/.\r\n   See also http://en.wikipedia.org/wiki/Julian_calendar.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) April 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CDate } from './Calendars'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Julian',\r\n  epochs: ['BC', 'AD'],\r\n  monthNames: ['January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'],\r\n  monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n  dateFormat: 'mm/dd/yyyy',\r\n  firstDay: 0,\r\n  isRTL: false\r\n}\r\n\r\nclass JulianCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Julian epoch: 1 January 0001 AD = 30 December 0001 BCE (Gregorian).\r\n    super('Julian', 1721423.5, JulianCalendar.localisations, language,\r\n      [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31])\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    let [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    if (y < 0) { y++ }; // No year zero\r\n    return y % 4 === 0\r\n  }\r\n\r\n  // Determine the week of the year for a date - ISO 8601.\r\n  weekOfYear(date: CDate): number;\r\n  weekOfYear(year: number, month: number, day: number): number;\r\n  weekOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    // Find Thursday of this week starting on Monday\r\n    let checkDate = yearOrDate instanceof CDate\r\n      ? this.date(yearOrDate)\r\n      : this.date(yearOrDate, month as number, day as number)\r\n    checkDate = checkDate.add(4 - (checkDate.dayOfWeek() || 7), 'd')\r\n    return Math.floor((checkDate.dayOfYear() - 1) / 7) + 1\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return this.daysPerMonth[m - 1] + (m === 2 && this.leapYear(y) ? 1 : 0)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return (dow || 7) < 6\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    if (y < 0) { y++ } // No year zero\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    if (m < 3) {\r\n      m += 12\r\n      y--\r\n    }\r\n    return Math.floor(365.25 * (y + 4716)) + Math.floor(30.6001 * (m + 1)) + d - 1524.5\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    const a = Math.floor(jd + 0.5)\r\n    const b = a + 1524\r\n    const c = Math.floor((b - 122.1) / 365.25)\r\n    const d = Math.floor(365.25 * c)\r\n    const e = Math.floor((b - d) / 30.6001)\r\n    const day = b - d - Math.floor(30.6001 * e)\r\n    const month = e - Math.floor(e < 14 ? 1 : 13)\r\n    let year = c - Math.floor(month > 2 ? 4716 : 4715)\r\n    if (year <= 0) { year-- } // No year zero\r\n    return this.date(year, month, day)\r\n  }\r\n}\r\n\r\nCalendars.register('julian', JulianCalendar)\r\n\r\nexport { JulianCalendar }\r\n"],"mappings":"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","ignoreList":[]}