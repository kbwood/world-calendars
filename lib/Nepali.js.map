{"version":3,"file":"Nepali.js","names":["_Calendars","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","NEPALI_CALENDAR_DATA","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","dateFormat","firstDay","isRTL","NepaliCalendar","CalendarBase","constructor","language","arguments","length","undefined","localisations","leapYear","yearOrDate","y","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","daysInYear","defaultDaysPerYear","daysPerYear","monthNum","daysInMonth","month","m","invalidMonth","notDay","daysPerMonth","weekDay","day","dow","dayOfWeek","toJD","d","invalidDate","nepaliMonth","createMissingCalendarData","gregorianDayOfYear","gregorianYear","gregorian","date","add","fromJD","jd","gregorianDate","year","dayOfYear","nepaliYear","dayOfFirstJanInPaush","daysSinceJanFirstToEndOfNepaliMonth","nepaliDayOfMonth","newData","slice","unshift","newYear","exports","instance","register"],"sources":["../src/Nepali.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Nepali civil calendar.\r\n   Written by Artur Neumann (ict.projects{at}nepal.inf.org) April 2013.\r\n   Based on the ideas from\r\n   http://codeissue.com/articles/a04e050dea7468f/algorithm-to-convert-english-date-to-nepali-date-using-c-net\r\n   and http://birenj2ee.blogspot.com/2011/04/nepali-calendar-in-java.html.\r\n   See also http://en.wikipedia.org/wiki/Nepali_calendar\r\n   and https://en.wikipedia.org/wiki/Bikram_Samwat.\r\n   Converted by Keith Wood (kbwood.au{at}gmail.com) May 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CDate } from './Calendars'\r\nimport './Gregorian'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\ntype NepaliData = {\r\n  [index: number]: number[],\r\n}\r\n\r\nconst NEPALI_CALENDAR_DATA: NepaliData = {\r\n  // These data are from http://www.ashesh.com.np\r\n  1970: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1971: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  1972: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  1973: [19, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1974: [19, 31, 31, 32, 30, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1975: [18, 31, 31, 32, 32, 30, 31, 30, 29, 30, 29, 30, 30],\r\n  1976: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1977: [18, 31, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\r\n  1978: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1979: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1980: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1981: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  1982: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1983: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1984: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1985: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  1986: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1987: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1988: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1989: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1990: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1991: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  // These data are from http://nepalicalendar.rat32.com/index.php\r\n  1992: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1993: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1994: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1995: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  1996: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1997: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1998: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1999: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2000: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2001: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2002: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2003: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2004: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2005: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2006: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2007: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2008: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2009: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2010: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2011: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2012: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2013: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2014: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2015: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2016: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2017: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2018: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2019: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2020: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2021: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2022: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2023: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2024: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2025: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2026: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2027: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2028: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2029: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  2030: [17, 31, 32, 31, 32, 31, 30, 30, 30, 30, 30, 30, 31],\r\n  2031: [17, 31, 32, 31, 32, 31, 31, 31, 31, 31, 31, 31, 31],\r\n  2032: [17, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],\r\n  2033: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2034: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2035: [17, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2036: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2037: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2038: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2039: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2040: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2041: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2042: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2043: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2044: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2045: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2046: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2047: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2048: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2049: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2050: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2051: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2052: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2053: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2054: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2055: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 29, 30],\r\n  2056: [17, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  2057: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2058: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2059: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2060: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2061: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2062: [17, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\r\n  2063: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2064: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2065: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2066: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2067: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2068: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2069: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2070: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2071: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2072: [17, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2073: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2074: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2075: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2076: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2077: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2078: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2079: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2080: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  // These data are from http://www.ashesh.com.np/nepali-calendar/\r\n  2081: [17, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2082: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2083: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2084: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2085: [17, 31, 32, 31, 32, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2086: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2087: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2088: [16, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],\r\n  2089: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2090: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2091: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2092: [16, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2093: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2094: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2095: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30],\r\n  2096: [17, 30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2097: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2098: [17, 31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 30, 31],\r\n  2099: [17, 31, 31, 32, 31, 31, 31, 30, 29, 29, 30, 30, 30],\r\n  2100: [17, 31, 32, 31, 32, 30, 31, 30, 29, 30, 29, 30, 30]\r\n}\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Nepali',\r\n  epochs: ['BBS', 'ABS'],\r\n  monthNames: ['Baisakh', 'Jestha', 'Ashadh', 'Shrawan', 'Bhadra', 'Ashwin',\r\n    'Kartik', 'Mangsir', 'Paush', 'Mangh', 'Falgun', 'Chaitra'],\r\n  monthNamesShort: ['Bai', 'Je', 'As', 'Shra', 'Bha', 'Ash', 'Kar', 'Mang', 'Pau', 'Ma', 'Fal', 'Chai'],\r\n  dayNames: ['Aaitabaar', 'Sombaar', 'Manglbaar', 'Budhabaar', 'Bihibaar', 'Shukrabaar', 'Shanibaar'],\r\n  dayNamesShort: ['Aaita', 'Som', 'Mangl', 'Budha', 'Bihi', 'Shukra', 'Shani'],\r\n  dayNamesMin: ['Aai', 'So', 'Man', 'Bu', 'Bi', 'Shu', 'Sha'],\r\n  dateFormat: 'dd/mm/yyyy',\r\n  firstDay: 1,\r\n  isRTL: false\r\n}\r\n\r\nclass NepaliCalendar extends CalendarBase {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n  static gregorian: CalendarBase = Calendars.instance('gregorian')\r\n  static defaultDaysPerYear = 365\r\n\r\n  constructor (language: string = '') {\r\n    // Julian date of start of Nepali epoch: 14 April 57 BCE (Gregorian).\r\n    super('Nepali', 1700709.5, NepaliCalendar.localisations, language,\r\n      [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30])\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return this.daysInYear(y) !== NepaliCalendar.defaultDaysPerYear\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    if (typeof NEPALI_CALENDAR_DATA[y] === 'undefined') {\r\n      return NepaliCalendar.defaultDaysPerYear\r\n    }\r\n    let daysPerYear = 0\r\n    for (let monthNum = this.minMonth; monthNum <= 12; monthNum++) {\r\n      daysPerYear += NEPALI_CALENDAR_DATA[y][monthNum]\r\n    }\r\n    return daysPerYear\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return (typeof NEPALI_CALENDAR_DATA[y] === 'undefined'\r\n      ? this.daysPerMonth[m - 1]\r\n      : NEPALI_CALENDAR_DATA[y][m])\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow !== 6\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const nepaliMonth = m\r\n    this.createMissingCalendarData(y)\r\n    // We will add all the days that went by since the 1st January and then we can get the Gregorian Date\r\n    let gregorianDayOfYear = 0\r\n    // Get the correct year\r\n    const gregorianYear = y - (m > 9 || (m === 9 &&\r\n        d >= NEPALI_CALENDAR_DATA[y][0])\r\n      ? 56\r\n      : 57)\r\n    // First we add the amount of days in the actual Nepali month as the day of year in the\r\n    // Gregorian one because at least these days are gone since the 1st Jan.\r\n    if (nepaliMonth !== 9) {\r\n      gregorianDayOfYear = d\r\n      m--\r\n    }\r\n    // Now we loop through all Nepali months and add the amount of days to gregorianDayOfYear\r\n    // we do this till we reach Paush (9th month). 1st January always falls in this month.\r\n    while (m !== 9) {\r\n      if (m <= 0) {\r\n        m = 12\r\n        y--\r\n      }\r\n      gregorianDayOfYear += NEPALI_CALENDAR_DATA[y][m]\r\n      m--\r\n    }\r\n    // If the date that has to be converted is in Paush (month no. 9) we have to do some other calculation\r\n    if (nepaliMonth === 9) {\r\n      // Add the days that are passed since the first day of Paush and substract the\r\n      // amount of days that lie between 1st Jan and 1st Paush\r\n      gregorianDayOfYear += d - NEPALI_CALENDAR_DATA[y][0]\r\n      // For the first days of Paush we are now in negative values,\r\n      // because in the end of the Gregorian year we substract\r\n      // 365 / 366 days (P.S. remember math in school + - gives -)\r\n      if (gregorianDayOfYear < 0) {\r\n        gregorianDayOfYear += NepaliCalendar.gregorian.daysInYear(gregorianYear)\r\n      }\r\n    } else {\r\n      gregorianDayOfYear += NEPALI_CALENDAR_DATA[y][9] - NEPALI_CALENDAR_DATA[y][0]\r\n    }\r\n    return NepaliCalendar.gregorian.date(gregorianYear, 1, 1).add(gregorianDayOfYear, 'd').toJD()\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    const gregorianDate = NepaliCalendar.gregorian.fromJD(jd)\r\n    const gregorianYear = gregorianDate.year()\r\n    const gregorianDayOfYear = gregorianDate.dayOfYear()\r\n    let nepaliYear = gregorianYear + 56 // this is not final, it could be also +57 but +56 is always true for 1st Jan.\r\n    this.createMissingCalendarData(nepaliYear)\r\n    let nepaliMonth = 9 // Jan 1 always fall in Nepali month Paush which is the 9th month of Nepali calendar.\r\n    // Get the Nepali day in Paush (month 9) of 1st January\r\n    const dayOfFirstJanInPaush = NEPALI_CALENDAR_DATA[nepaliYear][0]\r\n    // Check how many days are left of Paush.\r\n    // Days calculated from 1st Jan till the end of the actual Nepali month,\r\n    // we use this value to check if the Gregorian date is in the actual Nepali month.\r\n    let daysSinceJanFirstToEndOfNepaliMonth =\r\n        NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] - dayOfFirstJanInPaush + 1\r\n    // If the Gregorian day-of-year is smaller than or equal to the sum of days between the 1st January and\r\n    // the end of the actual Nepali month we have found the correct Nepali month.\r\n    // Example:\r\n    // The 4th February 2011 is the gregorianDayOfYear 35 (31 days of January + 4)\r\n    // 1st January 2011 is in the Nepali year 2067, where 1st January is the 17th day of Paush (9th month).\r\n    // In 2067 Paush has 30 days, which means (30-17+1=14) there are 14 days between 1st January and end of Paush\r\n    // (including 17th January).\r\n    // The gregorianDayOfYear (35) is bigger than 14, so we check the next month.\r\n    // The next Nepali month (Mangh) has 29 days\r\n    // 29+14=43, this is bigger than gregorianDayOfYear (35) so, we have found the correct Nepali month.\r\n    while (gregorianDayOfYear > daysSinceJanFirstToEndOfNepaliMonth) {\r\n      nepaliMonth++\r\n      if (nepaliMonth > 12) {\r\n        nepaliMonth = 1\r\n        nepaliYear++\r\n        if (nepaliYear === 0) {\r\n          nepaliYear++\r\n        }\r\n      }\r\n      daysSinceJanFirstToEndOfNepaliMonth += NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth]\r\n    }\r\n    // The last step is to calculate the Nepali day-of-month.\r\n    // To continue our example from before:\r\n    // we calculated there are 43 days from 1st January (17 Paush) till end of Mangh (29 days).\r\n    // When we subtract from this 43 days the day-of-year of the the Gregorian date (35),\r\n    // we know how far the searched day is away from the end of the Nepali month.\r\n    // So we simply subtract this number from the amount of days in this month (30).\r\n    const nepaliDayOfMonth = NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] -\r\n        (daysSinceJanFirstToEndOfNepaliMonth - gregorianDayOfYear)\r\n    if (nepaliYear <= 0) {\r\n      nepaliYear--\r\n    }\r\n    return this.date(nepaliYear, nepaliMonth, nepaliDayOfMonth)\r\n  }\r\n\r\n  // Creates missing data in the NEPALI_CALENDAR_DATA table.\r\n  // This data will not be correct but just give an estimated result. Mostly -/+ 1 day.\r\n  private createMissingCalendarData (y: number): void {\r\n    const newData = this.daysPerMonth.slice(0)\r\n    newData.unshift(17)\r\n    for (let newYear = y; newYear < (y + 3); newYear++) {\r\n      if (typeof NEPALI_CALENDAR_DATA[newYear] === 'undefined') {\r\n        NEPALI_CALENDAR_DATA[newYear] = newData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nCalendars.register('nepali', NepaliCalendar)\r\n\r\nexport { NepaliCalendar }\r\n"],"mappings":"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","ignoreList":[]}