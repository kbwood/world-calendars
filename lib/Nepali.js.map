{"version":3,"sources":["../src/Nepali.ts"],"names":["NEPALI_CALENDAR_DATA","defaultLocalisation","name","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","digits","undefined","dateFormat","firstDay","isRTL","NepaliCalendar","BaseCalendar","constructor","language","localisations","leapYear","yearOrDate","y","CDate","validate","Calendars","local","invalidYear","minMonth","minDay","daysInYear","defaultDaysPerYear","weekOfYear","month","day","checkDate","date","add","dayOfWeek","Math","floor","dayOfYear","daysPerYear","monthNum","daysInMonth","m","invalidMonth","notDay","daysPerMonth","weekDay","dow","toJD","d","invalidDate","nepaliMonth","createMissingCalendarData","gregorianCalendar","instance","gregorianDayOfYear","gregorianYear","fromJD","jd","gregorianDate","year","nepaliYear","dayOfFirstJanInPaush","daysSinceJanFirstToEndOfNepaliMonth","nepaliDayOfMonth","newData","slice","unshift","newYear","register"],"mappings":"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","sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementation of the Nepali civil calendar.\r\n   Written by Artur Neumann (ict.projects{at}nepal.inf.org) April 2013.\r\n     Based on the ideas from\r\n     <a href=\"http://codeissue.com/articles/a04e050dea7468f/algorithm-to-convert-english-date-to-nepali-date-using-c-net\">http://codeissue.com/articles/a04e050dea7468f/algorithm-to-convert-english-date-to-nepali-date-using-c-net</a>\r\n     and <a href=\"http://birenj2ee.blogspot.com/2011/04/nepali-calendar-in-java.html\">http://birenj2ee.blogspot.com/2011/04/nepali-calendar-in-java.html</a>\r\n     See also <a href=\"http://en.wikipedia.org/wiki/Nepali_calendar\">http://en.wikipedia.org/wiki/Nepali_calendar</a>\r\n     and <a href=\"https://en.wikipedia.org/wiki/Bikram_Samwat\">https://en.wikipedia.org/wiki/Bikram_Samwat</a>.\r\n   Converted by Keith Wood (wood.keith{at}optusnet.com.au) May 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { BaseCalendar, CDate } from './Calendars'\r\nimport './Gregorian'\r\nimport type { CalendarLocalisation, RegionalLocalisations } from './Calendars'\r\n\r\ntype NepaliData = {\r\n  [index: number]: number[],\r\n}\r\n\r\nconst NEPALI_CALENDAR_DATA: NepaliData = {\r\n  // These data are from http://www.ashesh.com.np\r\n  1970: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1971: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  1972: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  1973: [19, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1974: [19, 31, 31, 32, 30, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1975: [18, 31, 31, 32, 32, 30, 31, 30, 29, 30, 29, 30, 30],\r\n  1976: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1977: [18, 31, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\r\n  1978: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1979: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1980: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1981: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  1982: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1983: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1984: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1985: [18, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  1986: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1987: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  1988: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  1989: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1990: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1991: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  // These data are from http://nepalicalendar.rat32.com/index.php\r\n  1992: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1993: [18, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1994: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1995: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  1996: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  1997: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1998: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  1999: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2000: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2001: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2002: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2003: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2004: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2005: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2006: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2007: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2008: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2009: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2010: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2011: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2012: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2013: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2014: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2015: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2016: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2017: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2018: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2019: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2020: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2021: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2022: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2023: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2024: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2025: [18, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2026: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2027: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2028: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2029: [18, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  2030: [17, 31, 32, 31, 32, 31, 30, 30, 30, 30, 30, 30, 31],\r\n  2031: [17, 31, 32, 31, 32, 31, 31, 31, 31, 31, 31, 31, 31],\r\n  2032: [17, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32],\r\n  2033: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2034: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2035: [17, 30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2036: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2037: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2038: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2039: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2040: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2041: [18, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2042: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2043: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2044: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2045: [18, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2046: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2047: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2048: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2049: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2050: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2051: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2052: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2053: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2054: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2055: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 29, 30],\r\n  2056: [17, 31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30],\r\n  2057: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2058: [17, 30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2059: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2060: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2061: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2062: [17, 30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31],\r\n  2063: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2064: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2065: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2066: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31],\r\n  2067: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2068: [17, 31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2069: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2070: [17, 31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30],\r\n  2071: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2072: [17, 31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2073: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31],\r\n  2074: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2075: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2076: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  2077: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31],\r\n  2078: [17, 31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2079: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30],\r\n  2080: [16, 31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30],\r\n  // These data are from http://www.ashesh.com.np/nepali-calendar/\r\n  2081: [17, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2082: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2083: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2084: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2085: [17, 31, 32, 31, 32, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2086: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2087: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2088: [16, 30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30],\r\n  2089: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2090: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2091: [16, 31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30],\r\n  2092: [16, 31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2093: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2094: [17, 31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2095: [17, 31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30],\r\n  2096: [17, 30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30],\r\n  2097: [17, 31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30],\r\n  2098: [17, 31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 30, 31],\r\n  2099: [17, 31, 31, 32, 31, 31, 31, 30, 29, 29, 30, 30, 30],\r\n  2100: [17, 31, 32, 31, 32, 30, 31, 30, 29, 30, 29, 30, 30]\r\n}\r\n\r\nconst defaultLocalisation: CalendarLocalisation = {\r\n  name: 'Nepali',\r\n  epochs: ['BBS', 'ABS'],\r\n  monthNames: ['Baisakh', 'Jestha', 'Ashadh', 'Shrawan', 'Bhadra', 'Ashwin',\r\n    'Kartik', 'Mangsir', 'Paush', 'Mangh', 'Falgun', 'Chaitra'],\r\n  monthNamesShort: ['Bai', 'Je', 'As', 'Shra', 'Bha', 'Ash', 'Kar', 'Mang', 'Pau', 'Ma', 'Fal', 'Chai'],\r\n  dayNames: ['Aaitabaar', 'Sombaar', 'Manglbaar', 'Budhabaar', 'Bihibaar', 'Shukrabaar', 'Shanibaar'],\r\n  dayNamesShort: ['Aaita', 'Som', 'Mangl', 'Budha', 'Bihi', 'Shukra', 'Shani'],\r\n  dayNamesMin: ['Aai', 'So', 'Man', 'Bu', 'Bi', 'Shu', 'Sha'],\r\n  digits: undefined,\r\n  dateFormat: 'dd/mm/yyyy',\r\n  firstDay: 1,\r\n  isRTL: false\r\n}\r\n\r\nclass NepaliCalendar extends BaseCalendar {\r\n  // Localisations for the plugin.\r\n  // Entries are objects indexed by the language code ('' being the default US/English). */\r\n  static localisations: RegionalLocalisations = { '': defaultLocalisation }\r\n  static defaultDaysPerYear = 365\r\n\r\n  constructor (language: string = '') {\r\n    super('Nepali', 1700709.5, NepaliCalendar.localisations[language] || NepaliCalendar.localisations[''],\r\n      [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30])\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear(date: CDate): boolean;\r\n  leapYear(year: number): boolean;\r\n  leapYear (yearOrDate: CDate | number): boolean {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return this.daysInYear(y) !== NepaliCalendar.defaultDaysPerYear\r\n  }\r\n\r\n  // Determine the week of the year for a date.\r\n  weekOfYear(date: CDate): number;\r\n  weekOfYear(year: number, month: number, day: number): number;\r\n  weekOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    // Find Sunday of this week starting on Sunday\r\n    let checkDate = yearOrDate instanceof CDate\r\n      ? this.date(yearOrDate)\r\n      : this.date(yearOrDate, month as number, day as number)\r\n    checkDate = checkDate.add(-checkDate.dayOfWeek(), 'd')\r\n    return Math.floor((checkDate.dayOfYear() - 1) / 7) + 1\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    if (typeof NEPALI_CALENDAR_DATA[y] === 'undefined') {\r\n      return NepaliCalendar.defaultDaysPerYear\r\n    }\r\n    let daysPerYear = 0\r\n    for (let monthNum = this.minMonth; monthNum <= 12; monthNum++) {\r\n      daysPerYear += NEPALI_CALENDAR_DATA[y][monthNum]\r\n    }\r\n    return daysPerYear\r\n  }\r\n\r\n  // Retrieve the number of days in a month.\r\n  daysInMonth(date: CDate): number;\r\n  daysInMonth(year: number, month: number): number;\r\n  daysInMonth (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay, { notDay: true })\r\n    return (typeof NEPALI_CALENDAR_DATA[y] === 'undefined'\r\n      ? this.daysPerMonth[m - 1]\n      : NEPALI_CALENDAR_DATA[y][m])\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay(date: CDate): boolean;\r\n  weekDay(year: number, month: number, day: number): boolean;\r\n  weekDay (yearOrDate: CDate | number, month?: number, day?: number): boolean {\r\n    const dow = yearOrDate instanceof CDate\r\n      ? this.dayOfWeek(yearOrDate)\r\n      : this.dayOfWeek(yearOrDate, month as number, day as number)\r\n    return dow !== 6\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD(date: CDate): number;\r\n  toJD(year: number, month: number, day: number): number;\r\n  toJD (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    let [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const nepaliMonth = m\r\n    this.createMissingCalendarData(y)\r\n    const gregorianCalendar = Calendars.instance('gregorian')\r\n    // We will add all the days that went by since the 1st January and then we can get the Gregorian Date\r\n    let gregorianDayOfYear = 0\r\n    // Get the correct year\r\n    const gregorianYear = y - (m > 9 || (m === 9 &&\r\n        d >= NEPALI_CALENDAR_DATA[y][0])\n      ? 56\n      : 57)\r\n    // First we add the amount of days in the actual Nepali month as the day of year in the\r\n    // Gregorian one because at least these days are gone since the 1st Jan.\r\n    if (nepaliMonth !== 9) {\r\n      gregorianDayOfYear = d\r\n      m--\r\n    }\r\n    // Now we loop throw all Nepali months and add the amount of days to gregorianDayOfYear\r\n    // we do this till we reach Paush (9th month). 1st January always falls in this month.\r\n    while (m !== 9) {\r\n      if (m <= 0) {\r\n        m = 12\r\n        y--\r\n      }\r\n      gregorianDayOfYear += NEPALI_CALENDAR_DATA[y][m]\r\n      m--\r\n    }\r\n    // If the date that has to be converted is in Paush (month no. 9) we have to do some other calculation\r\n    if (nepaliMonth === 9) {\r\n      // Add the days that are passed since the first day of Paush and substract the\r\n      // amount of days that lie between 1st Jan and 1st Paush\r\n      gregorianDayOfYear += d - NEPALI_CALENDAR_DATA[y][0]\r\n      // For the first days of Paush we are now in negative values,\r\n      // because in the end of the Gregorian year we substract\r\n      // 365 / 366 days (P.S. remember math in school + - gives -)\r\n      if (gregorianDayOfYear < 0) {\r\n        gregorianDayOfYear += gregorianCalendar.daysInYear(gregorianYear)\r\n      }\r\n    } else {\r\n      gregorianDayOfYear += NEPALI_CALENDAR_DATA[y][9] - NEPALI_CALENDAR_DATA[y][0]\r\n    }\r\n    return gregorianCalendar.date(gregorianYear, 1, 1).add(gregorianDayOfYear, 'd').toJD()\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    const gregorianCalendar = Calendars.instance('gregorian')\r\n    const gregorianDate = gregorianCalendar.fromJD(jd)\r\n    const gregorianYear = gregorianDate.year()\r\n    const gregorianDayOfYear = gregorianDate.dayOfYear()\r\n    let nepaliYear = gregorianYear + 56 // this is not final, it could be also +57 but +56 is always true for 1st Jan.\r\n    this.createMissingCalendarData(nepaliYear)\r\n    let nepaliMonth = 9 // Jan 1 always fall in Nepali month Paush which is the 9th month of Nepali calendar.\r\n    // Get the Nepali day in Paush (month 9) of 1st January\r\n    const dayOfFirstJanInPaush = NEPALI_CALENDAR_DATA[nepaliYear][0]\r\n    // Check how many days are left of Paush.\r\n    // Days calculated from 1st Jan till the end of the actual Nepali month,\r\n    // we use this value to check if the Gregorian date is in the actual Nepali month.\r\n    let daysSinceJanFirstToEndOfNepaliMonth =\r\n        NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] - dayOfFirstJanInPaush + 1\r\n    // If the Gregorian day-of-year is smaller than or equal to the sum of days between the 1st January and\r\n    // the end of the actual Nepali month we have found the correct Nepali month.\r\n    // Example:\r\n    // The 4th February 2011 is the gregorianDayOfYear 35 (31 days of January + 4)\r\n    // 1st January 2011 is in the Nepali year 2067, where 1st January is the 17th day of Paush (9th month).\r\n    // In 2067 Paush has 30 days, which means (30-17+1=14) there are 14 days between 1st January and end of Paush\r\n    // (including 17th January).\r\n    // The gregorianDayOfYear (35) is bigger than 14, so we check the next month.\r\n    // The next Nepali month (Mangh) has 29 days\r\n    // 29+14=43, this is bigger than gregorianDayOfYear (35) so, we have found the correct Nepali month.\r\n    while (gregorianDayOfYear > daysSinceJanFirstToEndOfNepaliMonth) {\r\n      nepaliMonth++\r\n      if (nepaliMonth > 12) {\r\n        nepaliMonth = 1\r\n        nepaliYear++\r\n        if (nepaliYear === 0) {\r\n          nepaliYear++\r\n        }\r\n      }\r\n      daysSinceJanFirstToEndOfNepaliMonth += NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth]\r\n    }\r\n    // The last step is to calculate the Nepali day-of-month.\r\n    // To continue our example from before:\r\n    // we calculated there are 43 days from 1st January (17 Paush) till end of Mangh (29 days).\r\n    // When we subtract from this 43 days the day-of-year of the the Gregorian date (35),\r\n    // we know how far the searched day is away from the end of the Nepali month.\r\n    // So we simply subtract this number from the amount of days in this month (30).\r\n    const nepaliDayOfMonth = NEPALI_CALENDAR_DATA[nepaliYear][nepaliMonth] -\r\n        (daysSinceJanFirstToEndOfNepaliMonth - gregorianDayOfYear)\r\n    if (nepaliYear <= 0) {\r\n      nepaliYear--\r\n    }\r\n    return this.date(nepaliYear, nepaliMonth, nepaliDayOfMonth)\r\n  }\r\n\r\n  // Creates missing data in the NEPALI_CALENDAR_DATA table.\r\n  // This data will not be correct but just give an estimated result. Mostly -/+ 1 day.\r\n  private createMissingCalendarData (y: number): void {\r\n    const newData = this.daysPerMonth.slice(0)\r\n    newData.unshift(17)\r\n    for (let newYear = y; newYear < (y + 3); newYear++) {\r\n      if (typeof NEPALI_CALENDAR_DATA[newYear] === 'undefined') {\r\n        NEPALI_CALENDAR_DATA[newYear] = newData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nCalendars.register('nepali', NepaliCalendar)\r\n\r\nexport { NepaliCalendar }\r\n"],"file":"Nepali.js"}