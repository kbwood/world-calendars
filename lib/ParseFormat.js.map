{"version":3,"file":"ParseFormat.js","names":["_Calendars","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ATOM","exports","COOKIE","FULL","ISO_8601","JULIAN","RFC_822","RFC_850","RFC_1036","RFC_1123","RFC_2822","RSS","W3C","formatDate","date","pattern","arguments","length","undefined","cal","calendar","local","dateFormat","index","doubled","match","step","matches","charAt","Math","floor","localiseNumbers","value","localiseDigits","formatNumber","len","num","concat","formatName","shortNames","longNames","output","literal","day","dayOfWeek","dayNamesShort","dayNames","dayOfYear","weekOfYear","month","minMonth","monthNamesShort","monthNames","year","formatYear","epoch","CalendarBase","prototype","format","yearOrDate","monthOrPattern","y","m","d","CDate","validate","Calendars","invalidDate","errorMessages","missingNumberAt","unknownNameAt","unexpectedLiteralAt","unexpectedText","parseDate","iValue","iPattern","shortYear","getNumber","isDoubled","size","indexOf","localValue","substring","normaliseDigits","digits","RegExp","CalendarError","replace","parseInt","getName","offset","names","toLowerCase","checkLiteral","NaN","doy","epochs","isNaN","firstMonth","dim","daysInMonth","monthsInYear","parse"],"sources":["../src/ParseFormat.ts"],"sourcesContent":["/* http://keith-wood.name/calendars.html\r\n   Calendars parsing and formatting.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) June 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\nimport Calendars, { CalendarBase, CalendarError, CDate } from './Calendars'\r\n\r\n// Date form for ATOM (RFC 3339/ISO 8601).\r\nconst ATOM = 'yyyy-mm-dd'\r\n// Date form for cookies.\r\nconst COOKIE = 'D, dd M yyyy'\r\n// Date form for full date.\r\nconst FULL = 'DD, MM d, yyyy'\r\n// Date form for ISO 8601.\r\nconst ISO_8601 = 'yyyy-mm-dd'\r\n// Date form for Julian day number.\r\nconst JULIAN = 'J'\r\n// Date form for RFC 822.\r\nconst RFC_822 = 'D, d M yy'\r\n// Date form for RFC 850.\r\nconst RFC_850 = 'DD, dd-M-yy'\r\n// Date form for RFC 1036.\r\nconst RFC_1036 = 'D, d M yy'\r\n// Date form for RFC 1123.\r\nconst RFC_1123 = 'D, d M yyyy'\r\n// Date form for RFC 2822.\r\nconst RFC_2822 = 'D, d M yyyy'\r\n// Date form for RSS (RFC 822).\r\nconst RSS = 'D, d M yy'\r\n// Date form for W3c (ISO 8601).\r\nconst W3C = 'yyyy-mm-dd'\r\n\r\n/* Format a date object into a string value.\r\n   The format can be combinations of the following:\r\n    * d  - day of month (no leading zero)\r\n    * dd - day of month (two digit)\r\n    * o  - day of year (no leading zeros)\r\n    * oo - day of year (three digit)\r\n    * D  - day name short\r\n    * DD - day name long\r\n    * w  - week of year (no leading zero)\r\n    * ww - week of year (two digit)\r\n    * m  - month of year (no leading zero)\r\n    * mm - month of year (two digit)\r\n    * M  - month name short\r\n    * MM - month name long\r\n    * yy - year (two digit)\r\n    * yyyy - year (four digit)\r\n    * YYYY - formatted year\r\n    * e - epoch\r\n    * '...' - literal text\r\n    * '' - single quote */\r\nconst formatDate = function (date: CDate, pattern: string = ''): string {\r\n  const cal = date.calendar()\r\n  pattern = pattern || cal.local.dateFormat\r\n  let index = 0\r\n  // Check whether a format character is doubled\r\n  const doubled = (match: string, step?: number): boolean => {\r\n    let matches = 1\r\n    while (index + matches < pattern.length && pattern.charAt(index + matches) === match) {\r\n      matches++\r\n    }\r\n    index += matches - 1\r\n    return Math.floor(matches / (step || 1)) > 1\r\n  }\r\n  // Localise numbers if requested\r\n  const localiseNumbers = (value: string): string =>\r\n    cal.local.localiseDigits ? cal.local.localiseDigits(value) : value\r\n  // Format a number, with leading zeroes if necessary\r\n  const formatNumber = (match: string, value: number, len: number): string => {\r\n    let num = `${value}`\r\n    if (doubled(match)) {\r\n      while (num.length < len) {\r\n        num = `0${num}`\r\n      }\r\n    }\r\n    return num\r\n  }\r\n  // Format a name, short or long as requested\r\n  const formatName = (match: string, value: number, shortNames: string[], longNames: string[]): string =>\r\n    doubled(match) ? longNames[value] : shortNames[value]\r\n\r\n  let output = ''\r\n  let literal = false\r\n  for (index = 0; index < pattern.length; index++) {\r\n    if (literal) {\r\n      if (pattern.charAt(index) === \"'\" && !doubled(\"'\")) {\r\n        literal = false\r\n      } else {\r\n        output += pattern.charAt(index)\r\n      }\r\n    } else {\r\n      switch (pattern.charAt(index)) {\r\n        case 'd': output += localiseNumbers(formatNumber('d', date.day(), 2)); break\r\n        case 'D': output += formatName('D', date.dayOfWeek(), cal.local.dayNamesShort, cal.local.dayNames); break\r\n        case 'o': output += localiseNumbers(formatNumber('o', date.dayOfYear(), 3)); break\r\n        case 'w': output += localiseNumbers(formatNumber('w', date.weekOfYear(), 2)); break\r\n        case 'm': output += localiseNumbers(formatNumber('m', date.month(), 2)); break\r\n        case 'M': output += formatName('M', date.month() - cal.minMonth, cal.local.monthNamesShort, cal.local.monthNames); break\r\n        case 'y':\r\n          output += localiseNumbers(`${doubled('y', 2)\r\n              ? date.year()\r\n              : (date.year() % 100 < 10 ? '0' : '') + date.year() % 100}`)\r\n          break\r\n        case 'Y':\r\n          doubled('Y', 2)\r\n          output += date.formatYear()\r\n          break\r\n        case 'e': output += date.epoch(); break\r\n        case \"'\":\r\n          if (doubled(\"'\")) {\r\n            output += \"'\"\r\n          } else {\r\n            literal = true\r\n          }\r\n          break\r\n        default:\r\n          output += pattern.charAt(index)\r\n      }\r\n    }\r\n  }\r\n  return output\r\n}\r\n\r\nCalendarBase.prototype.format =\r\nfunction format (yearOrDate: CDate | number, monthOrPattern: string | number | undefined, day?: number, pattern?: string): string {\r\n  const [y, m, d] = yearOrDate instanceof CDate\r\n  // @ts-ignore: validate is protected\r\n    ? this.validate('', yearOrDate)\r\n  // @ts-ignore: validate is protected\r\n    : this.validate(Calendars.local.invalidDate, yearOrDate, monthOrPattern as number, day as number)\r\n  return yearOrDate instanceof CDate\r\n    ? formatDate(yearOrDate, monthOrPattern as string)\r\n    : formatDate(this.date(y, m, d), pattern)\r\n}\r\n\r\nconst errorMessages = {\r\n  missingNumberAt: 'Missing number at position {0}',\r\n  unknownNameAt: 'Unknown name at position {0}',\r\n  unexpectedLiteralAt: 'Unexpected literal at position {0}',\r\n  unexpectedText: 'Additional text found at end'\r\n}\r\n\r\n// Parse a string value into a date object.\r\nconst parseDate = function (cal: CalendarBase, value: string, pattern: string = ''): CDate {\r\n  pattern = pattern || cal.local.dateFormat\r\n  let iValue = 0 // Position in the value\r\n  let iPattern = 0 // Position in the pattern\r\n  let shortYear = false\r\n  // Check whether a format character is doubled\r\n  const doubled = (match: string, step?: number): boolean => {\r\n    let matches = 1\r\n    while (iPattern + matches < pattern.length && pattern.charAt(iPattern + matches) === match) {\r\n      matches++\r\n    }\r\n    iPattern += matches - 1\r\n    return Math.floor(matches / (step || 1)) > 1\r\n  }\r\n  // Extract a number from the string value\r\n  const getNumber = (match: string, step?: number): number => {\r\n    const isDoubled = doubled(match, step)\r\n    if (match === 'y') {\r\n      shortYear = !isDoubled\r\n    }\r\n    const size = [2, 3, isDoubled ? 4 : 2, isDoubled ? 4 : 2]['oyY'.indexOf(match) + 1]\r\n    // Normalise numbers if necessary\r\n    let localValue = value.substring(iValue)\r\n    localValue = cal.local.normaliseDigits ? cal.local.normaliseDigits(localValue) : localValue\r\n    const digits = new RegExp('^-?\\\\d{1,' + size + '}')\r\n    const num = localValue.match(digits)\r\n    if (!num) {\r\n      throw new CalendarError(errorMessages.missingNumberAt.replace(/\\{0\\}/, `${iValue}`))\r\n    }\r\n    iValue += cal.local.localiseDigits ? cal.local.localiseDigits(num[0]).length : num[0].length\r\n    return parseInt(num[0], 10)\r\n  }\r\n  // Extract a name from the string value and convert to an index\r\n  const getName = (match: string, shortNames: string[], longNames: string[], offset: number = 0): number => {\r\n    const names = (doubled(match) ? longNames : shortNames)\r\n    let index = -1\r\n    for (let i = 0; i < names.length; i++) {\r\n      if (value.substring(iValue, iValue + names[i].length).toLowerCase() === names[i].toLowerCase()) {\r\n        if (index === -1) {\r\n          index = i\r\n        } else if (names[i].length > names[index].length) {\r\n          index = i\r\n        }\r\n      }\r\n    }\r\n    if (index > -1) {\r\n      iValue += names[index].length\r\n      return index + offset\r\n    }\r\n    throw new CalendarError(errorMessages.unknownNameAt.replace(/\\{0\\}/, `${iValue}`))\r\n  }\r\n  // Confirm that a literal character matches the string value\r\n  const checkLiteral = (): void => {\r\n    if (value.charAt(iValue) !== pattern.charAt(iPattern)) {\r\n      throw new CalendarError(errorMessages.unexpectedLiteralAt.replace(/\\{0\\}/, `${iValue}`))\r\n    }\r\n    iValue++\r\n  }\r\n  let epoch = 1\r\n  let year = NaN\r\n  let month = NaN\r\n  let day = NaN\r\n  let doy = NaN\r\n  let literal = false\r\n  for (iPattern = 0; iPattern < pattern.length; iPattern++) {\r\n    if (literal) {\r\n      if (pattern.charAt(iPattern) === \"'\" && !doubled(\"'\")) {\r\n        literal = false\r\n      } else {\r\n        checkLiteral()\r\n      }\r\n    } else {\r\n      switch (pattern.charAt(iPattern)) {\r\n        case 'd': day = getNumber('d'); break\r\n        case 'D': getName('D', cal.local.dayNamesShort, cal.local.dayNames); break\r\n        case 'o': doy = getNumber('o'); break\r\n        case 'w': getNumber('w'); break\r\n        case 'm': month = getNumber('m'); break\r\n        case 'M': month = getName('M', cal.local.monthNamesShort, cal.local.monthNames, cal.minMonth); break\r\n        case 'y': year = getNumber('y', 2); break\r\n        case 'Y': year = getNumber('Y', 2); break\r\n        case 'e': epoch = getName('e', cal.local.epochs, cal.local.epochs); break\r\n        case '*': iValue = value.length; break\r\n        case \"'\":\r\n          if (doubled(\"'\")) {\r\n            checkLiteral()\r\n          } else {\r\n            literal = true\r\n          }\r\n          break\r\n        default: checkLiteral()\r\n      }\r\n    }\r\n  }\r\n  if (iValue < value.length) {\r\n    throw new CalendarError(errorMessages.unexpectedText)\r\n  }\r\n  if (isNaN(year)) {\r\n    year = cal.date().year()\r\n  }\r\n  if (year < 100 && shortYear) {\r\n    year += Math.floor(cal.date().year() / 100) * 100\r\n  }\r\n  if (epoch === 0) {\r\n    year = -year\r\n  }\r\n  if (!isNaN(doy)) {\r\n    month = cal.firstMonth\r\n    day = doy\r\n    for (let dim = cal.daysInMonth(year, month); day > dim; dim = cal.daysInMonth(year, month)) {\r\n      month++\r\n      if (month > cal.monthsInYear(year)) {\r\n        month = cal.minMonth\r\n      }\r\n      day -= dim\r\n    }\r\n  }\r\n  return cal.date(year, month, day)\r\n}\r\n\r\nCalendarBase.prototype.parse = function (value: string, pattern: string = ''): CDate {\r\n  return parseDate(this, value, pattern)\r\n}\r\n\r\nexport { ATOM, COOKIE, FULL, ISO_8601, JULIAN, RFC_822, RFC_850, RFC_1036, RFC_1123, RFC_2822, RSS, W3C }\r\n"],"mappings":"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","ignoreList":[]}