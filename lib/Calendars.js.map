{"version":3,"sources":["../src/Calendars.ts"],"names":["pad","value","length","strValue","substring","CDate","constructor","calendar","yearOrDate","month","day","cal","name","Calendars","local","differentCalendars","replace","yr","mn","dy","isValid","invalidDate","date","year","set","epoch","formatYear","leapYear","monthOfYear","weekOfYear","daysInYear","dayOfYear","daysInMonth","dayOfWeek","weekDay","extraInfo","add","offset","period","sub","compareTo","c","toJD","fromJD","jd","toJSDate","fromJSDate","jsd","toString","Math","abs","BaseCalendar","jdEpoch","daysPerMonth","monthsPerYear","hasYearZero","minMonth","firstMonth","minDay","Date","now","validate","y","invalidYear","epochs","monthsInYear","notDay","notMonth","m","invalidMonth","miy","fromMonthOfYear","ord","d","daysInWeek","floor","addInternal","min","gregorianToJSDate","gregorianFromJD","gregorianToJD","gregorianFromJSDate","correctYear","sign","yearMonths","z","a","b","e","getFullYear","getMonth","getDate","setFullYear","setHours","setMinutes","setSeconds","setMilliseconds","getHours","error","validOptions","instance","language","calName","toLowerCase","localCals","calendars","invalidCalendar","register","implementingClass","alreadyRegistered","substituteDigits","digits","digit","Number","substituteChineseDigits","powers","localNumber","power","units","indexOf","substr"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA,SAASA,GAAT,CAAcC,KAAd,EAA6BC,MAA7B,EAAqD;AACnD,MAAMC,QAAQ,aAAMF,KAAN,CAAd;AACA,mBAAU,SAASG,SAAT,CAAmB,CAAnB,EAAsBF,MAAM,GAAGC,QAAQ,CAACD,MAAxC,CAAV,SAA4DC,QAA5D;AACD,C,CAED;;;AACA,MAAME,KAAN,CAAY;AACgB;AAK1B;AAGAC,EAAAA,WAAW,CAAEC,QAAF,EAA0BC,UAA1B,EAAsDC,KAAtD,EAAsEC,GAAtE,EAAoF;AAAA;;AAAA;;AAAA;;AAAA;;AAC7F,SAAKC,GAAL,GAAWJ,QAAX;;AACA,QAAIC,UAAU,YAAYH,KAA1B,EAAiC;AAC/B,UAAI,KAAKM,GAAL,CAASC,IAAT,KAAkBJ,UAAU,CAACD,QAAX,GAAsBK,IAA5C,EAAkD;AAChD,cAAMC,SAAS,CAACC,KAAV,CAAgBC,kBAAhB,CACHC,OADG,CACK,OADL,EACc,KAAKL,GAAL,CAASG,KAAT,CAAeF,IAD7B,EACmCI,OADnC,CAC2C,OAD3C,EACoDR,UAAU,CAACD,QAAX,GAAsBO,KAAtB,CAA4BF,IADhF,CAAN;AAED;;AACD,WAAKK,EAAL,GAAUT,UAAU,CAACS,EAArB;AACA,WAAKC,EAAL,GAAUV,UAAU,CAACU,EAArB;AACA,WAAKC,EAAL,GAAUX,UAAU,CAACW,EAArB;AACD,KARD,MAQO;AACL,UAAI,CAAC,KAAKR,GAAL,CAASS,OAAT,CAAiBZ,UAAjB,EAA6BC,KAA7B,EAA8CC,GAA9C,CAAL,EAAmE;AACjE,cAAMG,SAAS,CAACC,KAAV,CAAgBO,WAAhB,CAA4BL,OAA5B,CAAoC,OAApC,EAA6C,KAAKL,GAAL,CAASG,KAAT,CAAeF,IAA5D,CAAN;AACD;;AACD,WAAKK,EAAL,GAAUT,UAAV;AACA,WAAKU,EAAL,GAAUT,KAAV;AACA,WAAKU,EAAL,GAAUT,GAAV;AACD;AACF,GA3BS,CA6BV;;;AAGAY,EAAAA,IAAI,CAAEC,IAAF,EAAiBd,KAAjB,EAAiCC,GAAjC,EAAsD;AACxD,QAAI,OAAOa,IAAP,KAAgB,WAApB,EAAiC;AAC/B,aAAO,KAAKZ,GAAL,CAASW,IAAT,CAAc,IAAd,CAAP;AACD;;AACD,WAAO,KAAKX,GAAL,CAASW,IAAT,CAAcC,IAAd,EAA8Bd,KAA9B,EAA+CC,GAA/C,CAAP;AACD,GArCS,CAuCV;;;AACAH,EAAAA,QAAQ,GAAkB;AACxB,WAAO,KAAKI,GAAZ;AACD,GA1CS,CA4CV;;;AAGAY,EAAAA,IAAI,CAAEtB,KAAF,EAAkC;AACpC,WAAO,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,KAAKgB,EAApC,GAAyC,KAAKO,GAAL,CAASvB,KAAT,EAAgB,GAAhB,CAAhD;AACD,GAjDS,CAmDV;;;AAGAQ,EAAAA,KAAK,CAAER,KAAF,EAAkC;AACrC,WAAO,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,KAAKiB,EAApC,GAAyC,KAAKM,GAAL,CAASvB,KAAT,EAAgB,GAAhB,CAAhD;AACD,GAxDS,CA0DV;;;AAGAS,EAAAA,GAAG,CAAET,KAAF,EAAkC;AACnC,WAAO,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,KAAKkB,EAApC,GAAyC,KAAKK,GAAL,CAASvB,KAAT,EAAgB,GAAhB,CAAhD;AACD,GA/DS,CAiEV;;;AACAwB,EAAAA,KAAK,GAAY;AACf,WAAO,KAAKd,GAAL,CAASc,KAAT,CAAe,IAAf,CAAP;AACD,GApES,CAsEV;;;AACAC,EAAAA,UAAU,GAAY;AACpB,WAAO,KAAKf,GAAL,CAASe,UAAT,CAAoB,IAApB,CAAP;AACD,GAzES,CA2EV;;;AACAC,EAAAA,QAAQ,GAAa;AACnB,WAAO,KAAKhB,GAAL,CAASgB,QAAT,CAAkB,IAAlB,CAAP;AACD,GA9ES,CAgFV;;;AACAC,EAAAA,WAAW,GAAY;AACrB,WAAO,KAAKjB,GAAL,CAASiB,WAAT,CAAqB,IAArB,CAAP;AACD,GAnFS,CAqFV;;;AACAC,EAAAA,UAAU,GAAY;AACpB,WAAO,KAAKlB,GAAL,CAASkB,UAAT,CAAoB,IAApB,CAAP;AACD,GAxFS,CA0FV;;;AACAC,EAAAA,UAAU,GAAY;AACpB,WAAO,KAAKnB,GAAL,CAASmB,UAAT,CAAoB,IAApB,CAAP;AACD,GA7FS,CA+FV;;;AACAC,EAAAA,SAAS,GAAY;AACnB,WAAO,KAAKpB,GAAL,CAASoB,SAAT,CAAmB,IAAnB,CAAP;AACD,GAlGS,CAoGV;;;AACAC,EAAAA,WAAW,GAAY;AACrB,WAAO,KAAKrB,GAAL,CAASqB,WAAT,CAAqB,IAArB,CAAP;AACD,GAvGS,CAyGV;;;AACAC,EAAAA,SAAS,GAAY;AACnB,WAAO,KAAKtB,GAAL,CAASsB,SAAT,CAAmB,IAAnB,CAAP;AACD,GA5GS,CA8GV;;;AACAC,EAAAA,OAAO,GAAa;AAClB,WAAO,KAAKvB,GAAL,CAASuB,OAAT,CAAiB,IAAjB,CAAP;AACD,GAjHS,CAmHV;;;AACAC,EAAAA,SAAS,GAAY;AACnB,WAAO,KAAKxB,GAAL,CAASwB,SAAT,CAAmB,IAAnB,CAAP;AACD,GAtHS,CAwHV;;;AACAC,EAAAA,GAAG,CAAEC,MAAF,EAAkBC,MAAlB,EAAyC;AAC1C,WAAO,KAAK3B,GAAL,CAASyB,GAAT,CAAa,IAAb,EAAmBC,MAAnB,EAA2BC,MAA3B,CAAP;AACD,GA3HS,CA6HV;;;AACAC,EAAAA,GAAG,CAAEF,MAAF,EAAkBC,MAAlB,EAAyC;AAC1C,WAAO,KAAK3B,GAAL,CAAS4B,GAAT,CAAa,IAAb,EAAmBF,MAAnB,EAA2BC,MAA3B,CAAP;AACD,GAhIS,CAkIV;;;AACAd,EAAAA,GAAG,CAAEvB,KAAF,EAAiBqC,MAAjB,EAAwC;AACzC,WAAO,KAAK3B,GAAL,CAASa,GAAT,CAAa,IAAb,EAAmBvB,KAAnB,EAA0BqC,MAA1B,CAAP;AACD,GArIS,CAuIV;;;AACAE,EAAAA,SAAS,CAAElB,IAAF,EAA8B;AACrC,QAAI,KAAKX,GAAL,CAASC,IAAT,KAAkBU,IAAI,CAACX,GAAL,CAASC,IAA/B,EAAqC;AACnC,YAAOC,SAAS,CAACC,KAAV,CAAgBC,kBAAjB,CACHC,OADG,CACK,OADL,EACc,KAAKL,GAAL,CAASG,KAAT,CAAeF,IAD7B,EACmCI,OADnC,CAC2C,OAD3C,EACoDM,IAAI,CAACX,GAAL,CAASG,KAAT,CAAeF,IADnE,CAAN;AAED;;AACD,QAAM6B,CAAC,GAAI,KAAKxB,EAAL,KAAYK,IAAI,CAACL,EAAjB,GACP,KAAKA,EAAL,GAAUK,IAAI,CAACL,EADR,GAEP,KAAKC,EAAL,KAAYI,IAAI,CAACJ,EAAjB,GACE,KAAKU,WAAL,KAAqBN,IAAI,CAACM,WAAL,EADvB,GAEE,KAAKT,EAAL,GAAUG,IAAI,CAACH,EAJrB;AAKA,WAAOsB,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAaA,CAAC,GAAG,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAjC;AACD,GAnJS,CAqJV;;;AACAC,EAAAA,IAAI,GAAY;AACd,WAAO,KAAK/B,GAAL,CAAS+B,IAAT,CAAc,IAAd,CAAP;AACD,GAxJS,CA0JV;;;AACAC,EAAAA,MAAM,CAAEC,EAAF,EAAqB;AACzB,WAAO,KAAKjC,GAAL,CAASgC,MAAT,CAAgBC,EAAhB,CAAP;AACD,GA7JS,CA+JV;;;AACAC,EAAAA,QAAQ,GAAU;AAChB,WAAO,KAAKlC,GAAL,CAASkC,QAAT,CAAkB,IAAlB,CAAP;AACD,GAlKS,CAoKV;;;AACAC,EAAAA,UAAU,CAAEC,GAAF,EAAoB;AAC5B,WAAO,KAAKpC,GAAL,CAASmC,UAAT,CAAoBC,GAApB,CAAP;AACD,GAvKS,CAyKV;;;AACAC,EAAAA,QAAQ,GAAY;AAClB,qBAAU,KAAK/B,EAAL,GAAU,CAAV,GAAc,GAAd,GAAoB,EAA9B,SAAmCjB,GAAG,CAACiD,IAAI,CAACC,GAAL,CAAS,KAAKjC,EAAd,CAAD,EAAoB,CAApB,CAAtC,cAAgEjB,GAAG,CAAC,KAAKkB,EAAN,EAAU,CAAV,CAAnE,cAAmFlB,GAAG,CAAC,KAAKmB,EAAN,EAAU,CAAV,CAAtF,eAAuG,KAAKR,GAAL,CAASC,IAAhH;AACD;;AA5KS;;;;AAuMZ;AACA,MAAeuC,YAAf,CAA4B;AAC1B;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAGA7C,EAAAA,WAAW,CAAEM,IAAF,EAAgBwC,OAAhB,EAAiCtC,KAAjC,EAA8DuC,YAA9D,EACmH;AAAA,QAA5HC,aAA4H,uEAApG,EAAoG;AAAA,QAAhGC,WAAgG,uEAAzE,KAAyE;AAAA,QAAlEC,QAAkE,uEAA/C,CAA+C;AAAA,QAA5CC,UAA4C,uEAAvB,CAAuB;AAAA,QAApBC,MAAoB,uEAAH,CAAG;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAC5H,SAAK9C,IAAL,GAAYA,IAAZ;AACA,SAAKwC,OAAL,GAAeA,OAAf;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK5C,KAAL,GAAaA,KAAb;AACD,GA/ByB,CAiC1B;;;AAGAQ,EAAAA,IAAI,CAAEd,UAAF,EAA+BC,KAA/B,EAA+CC,GAA/C,EAAoE;AACtE,QAAI,OAAOF,UAAP,KAAsB,WAA1B,EAAuC;AACrC,aAAO,KAAKsC,UAAL,CAAgB,IAAIa,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAhB,CAAP;AACD;;AACD,QAAIpD,UAAU,YAAYH,KAA1B,EAAiC;AAC/B,WAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB;AACA,aAAO,IAAIH,KAAJ,CAAU,IAAV,EAAgBG,UAAhB,CAAP;AACD;;AACD,SAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C,EAAuDC,KAAvD,EAAwEC,GAAxE;AACA,WAAO,IAAIL,KAAJ,CAAU,IAAV,EAAgBG,UAAhB,EAA4BC,KAA5B,EAA6CC,GAA7C,CAAP;AACD,GA9CyB,CAgD1B;;;AAIA;AACAe,EAAAA,KAAK,CAAEjB,UAAF,EAAsC;AACzC,QAAM,CAACsD,CAAD,IAAMtD,UAAU,YAAYH,KAAtB,GACR,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADQ,GAER,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBiD,WAA9B,EAA2CvD,UAA3C,EAAuD,KAAKgD,QAA5D,EAAsE,KAAKE,MAA3E,CAFJ;AAGA,WAAQI,CAAC,GAAG,CAAJ,GAAQ,KAAKhD,KAAL,CAAWkD,MAAX,CAAkB,CAAlB,CAAR,GAA+B,KAAKlD,KAAL,CAAWkD,MAAX,CAAkB,CAAlB,CAAvC;AACD,GA1DyB,CA4D1B;;;AACAtC,EAAAA,UAAU,CAAElB,UAAF,EAAsC;AAC9C,QAAM,CAACsD,CAAD,IAAMtD,UAAU,YAAYH,KAAtB,GACR,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADQ,GAER,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBiD,WAA9B,EAA2CvD,UAA3C,EAAuD,KAAKgD,QAA5D,EAAsE,KAAKE,MAA3E,CAFJ;AAGA,WAAO,CAACI,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAc,EAAf,IAAqB9D,GAAG,CAACiD,IAAI,CAACC,GAAL,CAASY,CAAT,CAAD,EAAc,CAAd,CAA/B;AACD,GAlEyB,CAoE1B;;;AACAG,EAAAA,YAAY,CAAEzD,UAAF,EAAsC;AAChDA,IAAAA,UAAU,YAAYH,KAAtB,GACI,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADJ,GAEI,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBiD,WAA9B,EAA2CvD,UAA3C,EAAuD,KAAKgD,QAA5D,EAAsE,KAAKE,MAA3E,EAAmF;AAAEQ,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAnF,CAFJ;AAGA,WAAO,KAAKb,aAAZ;AACD,GA1EyB,CA4E1B;;;AAGA1B,EAAAA,WAAW,CAAEpB,UAAF,EAA8BC,KAA9B,EAAsD;AAC/D,QAAM,CAACqD,CAAD,EAAIM,CAAJ,IAAS5D,UAAU,YAAYH,KAAtB,GACX,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADW,GAEX,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBuD,YAA9B,EAA4C7D,UAA5C,EAAwDC,KAAxD,EAAyE,KAAKiD,MAA9E,CAFJ;AAGA,QAAMY,GAAG,GAAG,KAAKL,YAAL,CAAkBH,CAAlB,CAAZ;AACA,WAAO,CAACM,CAAC,GAAGE,GAAJ,GAAU,KAAKb,UAAhB,IAA8Ba,GAA9B,GAAoC,KAAKd,QAAhD;AACD,GArFyB,CAuF1B;;;AACAe,EAAAA,eAAe,CAAEhD,IAAF,EAAgBiD,GAAhB,EAAqC;AAClD,QAAMJ,CAAC,GAAG,CAACI,GAAG,GAAG,KAAKf,UAAX,GAAwB,IAAI,KAAKD,QAAlC,IACR,KAAKS,YAAL,CAAkB1C,IAAlB,CADQ,GACkB,KAAKiC,QADjC;AAEA,SAAKK,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBuD,YAA9B,EAA4C9C,IAA5C,EAAkD6C,CAAlD,EAAqD,KAAKV,MAA1D;AACA,WAAOU,CAAP;AACD,GA7FyB,CA+F1B;;;AAIA;AACAtC,EAAAA,UAAU,CAAEtB,UAAF,EAAsC;AAC9C,QAAM,CAACsD,CAAD,IAAMtD,UAAU,YAAYH,KAAtB,GACR,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADQ,GAER,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBiD,WAA9B,EAA2CvD,UAA3C,EAAuD,KAAKgD,QAA5D,EAAsE,KAAKE,MAA3E,CAFJ;AAGA,WAAQ,KAAK/B,QAAL,CAAcmC,CAAd,IAAmB,GAAnB,GAAyB,GAAjC;AACD,GAzGyB,CA2G1B;;;AAGA/B,EAAAA,SAAS,CAAEvB,UAAF,EAA8BC,KAA9B,EAA8CC,GAA9C,EAAoE;AAC3E,QAAM,CAACoD,CAAD,EAAIM,CAAJ,EAAOK,CAAP,IAAYjE,UAAU,YAAYH,KAAtB,GACd,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADc,GAEd,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C,EAAuDC,KAAvD,EAAwEC,GAAxE,CAFJ;AAGA,QAAMY,IAAI,GAAG,KAAKA,IAAL,CAAUwC,CAAV,EAAaM,CAAb,EAAgBK,CAAhB,CAAb;AACA,WAAOnD,IAAI,CAACoB,IAAL,KAAc,KAAKpB,IAAL,CAAUwC,CAAV,EAAa,KAAKS,eAAL,CAAqBT,CAArB,EAAwB,KAAKN,QAA7B,CAAb,EAAqD,KAAKE,MAA1D,EAAkEhB,IAAlE,EAAd,GAAyF,CAAhG;AACD,GApHyB,CAsH1B;;;AAIA;AACAgC,EAAAA,UAAU,GAAY;AACpB,WAAO,CAAP;AACD,GA7HyB,CA+H1B;;;AAGAzC,EAAAA,SAAS,CAAEzB,UAAF,EAA8BC,KAA9B,EAA8CC,GAA9C,EAAoE;AAC3E,QAAM,CAACoD,CAAD,EAAIM,CAAJ,EAAOK,CAAP,IAAYjE,UAAU,YAAYH,KAAtB,GACd,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADc,GAEd,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C,EAAuDC,KAAvD,EAAwEC,GAAxE,CAFJ;AAGA,QAAMY,IAAI,GAAG,KAAKA,IAAL,CAAUwC,CAAV,EAAaM,CAAb,EAAgBK,CAAhB,CAAb;AACA,WAAO,CAACxB,IAAI,CAAC0B,KAAL,CAAWrD,IAAI,CAACoB,IAAL,EAAX,IAA0B,CAA3B,IAAgC,KAAKgC,UAAL,EAAvC;AACD,GAxIyB,CA0I1B;;;AAOAvC,EAAAA,SAAS,CAAE3B,UAAF,EAA8BC,KAA9B,EAA8CC,GAA9C,EAAoE;AAC3E,QAAIF,UAAU,YAAYH,KAA1B,EAAiC;AAC/B,WAAKwD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C;AACD,KAFD,MAEO;AACL,WAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C,EAAuDC,KAAvD,EAAwEC,GAAxE;AACD;;AACD,WAAO,EAAP;AACD,GAxJyB,CA0J1B;;;AACA0B,EAAAA,GAAG,CAAEd,IAAF,EAAee,MAAf,EAA+BC,MAA/B,EAAsD;AACvD,SAAKuB,QAAL,CAAc,EAAd,EAAkBvC,IAAlB;AACA,WAAO,KAAKsD,WAAL,CAAiBtD,IAAjB,EAAuBe,MAAvB,EAA+BC,MAA/B,CAAP;AACD,GA9JyB,CAgK1B;;;AACAC,EAAAA,GAAG,CAAEjB,IAAF,EAAee,MAAf,EAA+BC,MAA/B,EAAsD;AACvD,SAAKuB,QAAL,CAAc,EAAd,EAAkBvC,IAAlB;AACA,WAAO,KAAKsD,WAAL,CAAiBtD,IAAjB,EAAuB,CAACe,MAAxB,EAAgCC,MAAhC,CAAP;AACD,GApKyB,CAsK1B;;;AACAd,EAAAA,GAAG,CAAEF,IAAF,EAAerB,KAAf,EAA8BqC,MAA9B,EAAqD;AACtD,SAAKuB,QAAL,CAAc,EAAd,EAAkBvC,IAAlB;AACA,QAAMwC,CAAC,GAAIxB,MAAM,KAAK,GAAX,GAAiBrC,KAAjB,GAAyBqB,IAAI,CAACC,IAAL,EAApC;AACA,QAAM6C,CAAC,GAAI9B,MAAM,KAAK,GAAX,GAAiBrC,KAAjB,GAAyBqB,IAAI,CAACb,KAAL,EAApC;AACA,QAAIgE,CAAC,GAAInC,MAAM,KAAK,GAAX,GAAiBrC,KAAjB,GAAyBqB,IAAI,CAACZ,GAAL,EAAlC;;AACA,QAAI4B,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACpCmC,MAAAA,CAAC,GAAGxB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,EAAY,KAAKzC,WAAL,CAAiB8B,CAAjB,EAAoBM,CAApB,CAAZ,CAAJ;AACD;;AACD,WAAO9C,IAAI,CAACA,IAAL,CAAUwC,CAAV,EAAaM,CAAb,EAAgBK,CAAhB,CAAP;AACD,GAhLyB,CAkL1B;;;AACArD,EAAAA,OAAO,CAAEG,IAAF,EAAgBd,KAAhB,EAA+BC,GAA/B,EAA8F;AAAA,QAAlD;AAAEwD,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAkD,uEAAb,EAAa;AACnG,WAAO,CAAC,KAAKZ,WAAL,IAAoBhC,IAAI,KAAK,CAA9B,MACJ4C,QAAQ,IAAK1D,KAAK,IAAI,KAAK+C,QAAd,IAA0B/C,KAAK,GAAG,KAAK+C,QAAb,GAAwB,KAAKS,YAAL,CAAkB1C,IAAlB,CAD3D,MAEJ2C,MAAM,IAAKxD,GAAG,IAAI,KAAKgD,MAAZ,IAAsBhD,GAAG,GAAG,KAAKgD,MAAX,GAAoB,KAAK1B,WAAL,CAAiBT,IAAjB,EAAuBd,KAAvB,CAFjD,CAAP;AAGD,GAvLyB,CAyL1B;;;AAUAoC,EAAAA,QAAQ,CAAErC,UAAF,EAA8BC,KAA9B,EAA8CC,GAA9C,EAAkE;AACxE,QAAM,CAACoD,CAAD,EAAIM,CAAJ,EAAOK,CAAP,IAAYjE,UAAU,YAAYH,KAAtB,GACd,KAAKwD,QAAL,CAAc,EAAd,EAAkBrD,UAAlB,CADc,GAEd,KAAKqD,QAAL,CAAchD,SAAS,CAACC,KAAV,CAAgBO,WAA9B,EAA2Cb,UAA3C,EAAuDC,KAAvD,EAAwEC,GAAxE,CAFJ;AAGA,WAAO,KAAKoE,iBAAL,CAAuB,KAAKC,eAAL,CAAqB,KAAKzD,IAAL,CAAUwC,CAAV,EAAaM,CAAb,EAAgBK,CAAhB,EAAmB/B,IAAnB,EAArB,CAAvB,CAAP;AACD,GAxMyB,CA0M1B;;;AACAI,EAAAA,UAAU,CAAEC,GAAF,EAAoB;AAC5B,WAAO,KAAKJ,MAAL,CAAY,KAAKqC,aAAL,CAAmB,KAAKC,mBAAL,CAAyBlC,GAAzB,CAAnB,CAAZ,CAAP;AACD,GA7MyB,CA+M1B;;;AACU6B,EAAAA,WAAW,CAAEtD,IAAF,EAAee,MAAf,EAA+BC,MAA/B,EAAsD;AACzE,QAAM4C,WAAW,GAAIjE,EAAD,IAAwB;AAC1C,UAAIA,EAAE,KAAK,CAAP,IAAY,CAAC,KAAKsC,WAAtB,EAAmC;AACjCtC,QAAAA,EAAE,IAAIgC,IAAI,CAACkC,IAAL,CAAU9C,MAAV,CAAN;AACD;;AACD,aAAOpB,EAAP;AACD,KALD;;AAOA,QAAIqB,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACpC,UAAMM,GAAE,GAAGtB,IAAI,CAACoB,IAAL,KAAcL,MAAM,IAAIC,MAAM,KAAK,GAAX,GAAiB,KAAKoC,UAAL,EAAjB,GAAqC,CAAzC,CAA/B;;AACA,aAAOpD,IAAI,CAACf,QAAL,GAAgBoC,MAAhB,CAAuBC,GAAvB,CAAP;AACD;;AAED,QAAIkB,CAAS,GAAGoB,WAAW,CAAC5D,IAAI,CAACC,IAAL,MAAee,MAAM,KAAK,GAAX,GAAiBD,MAAjB,GAA0B,CAAzC,CAAD,CAA3B;AACA,QAAI+B,CAAS,GAAG9C,IAAI,CAACM,WAAL,MAAsBU,MAAM,KAAK,GAAX,GAAiBD,MAAjB,GAA0B,CAAhD,CAAhB;AACA,QAAIoC,CAAS,GAAGnD,IAAI,CAACZ,GAAL,EAAhB;;AACA,QAAI4B,MAAM,KAAK,GAAf,EAAoB;AAClB,UAAIhB,IAAI,CAACb,KAAL,OAAiB,KAAK8D,eAAL,CAAqBT,CAArB,EAAwBM,CAAxB,CAArB,EAAiD;AAAE;AACjDA,QAAAA,CAAC,GAAG,KAAK9C,IAAL,CAAUwC,CAAV,EAAaxC,IAAI,CAACb,KAAL,EAAb,EAA2B,KAAKiD,MAAhC,EAAwC9B,WAAxC,EAAJ;AACD;;AACDwC,MAAAA,CAAC,GAAGnB,IAAI,CAAC4B,GAAL,CAAST,CAAT,EAAY,KAAKH,YAAL,CAAkBH,CAAlB,CAAZ,CAAJ;AACAW,MAAAA,CAAC,GAAGxB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,EAAY,KAAKzC,WAAL,CAAiB8B,CAAjB,EAAoB,KAAKS,eAAL,CAAqBT,CAArB,EAAwBM,CAAxB,CAApB,CAAZ,CAAJ;AACD,KAND,MAMO,IAAI9B,MAAM,KAAK,GAAf,EAAoB;AACzB,aAAO8B,CAAC,GAAG,KAAKZ,QAAhB,EAA0B;AACxBM,QAAAA,CAAC,GAAGoB,WAAW,CAACpB,CAAC,GAAG,CAAL,CAAf;AACAM,QAAAA,CAAC,IAAI,KAAKH,YAAL,CAAkBH,CAAlB,CAAL;AACD;;AACD,UAAIsB,UAAU,GAAG,KAAKnB,YAAL,CAAkBH,CAAlB,CAAjB;;AACA,aAAOM,CAAC,GAAGgB,UAAU,GAAG,CAAb,GAAiB,KAAK5B,QAAjC,EAA2C;AACzCM,QAAAA,CAAC,GAAGoB,WAAW,CAACpB,CAAC,GAAG,CAAL,CAAf;AACAM,QAAAA,CAAC,IAAIgB,UAAL;AACAA,QAAAA,UAAU,GAAG,KAAKnB,YAAL,CAAkBH,CAAlB,CAAb;AACD;;AACDW,MAAAA,CAAC,GAAGxB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,EAAY,KAAKzC,WAAL,CAAiB8B,CAAjB,EAAoB,KAAKS,eAAL,CAAqBT,CAArB,EAAwBM,CAAxB,CAApB,CAAZ,CAAJ;AACD;;AACD,WAAO9C,IAAI,CAACA,IAAL,CAAUwC,CAAV,EAAa,KAAKS,eAAL,CAAqBT,CAArB,EAAwBM,CAAxB,CAAb,EAAyCK,CAAzC,CAAP;AACD,GApPyB,CAsP1B;;;AACUM,EAAAA,eAAe,CAAEnC,EAAF,EAAyB;AAChD;AACA,QAAMyC,CAAC,GAAGpC,IAAI,CAAC0B,KAAL,CAAW/B,EAAE,GAAG,GAAhB,CAAV;AACA,QAAI0C,CAAC,GAAGrC,IAAI,CAAC0B,KAAL,CAAW,CAACU,CAAC,GAAG,UAAL,IAAmB,QAA9B,CAAR;AACAC,IAAAA,CAAC,GAAGD,CAAC,GAAG,CAAJ,GAAQC,CAAR,GAAYrC,IAAI,CAAC0B,KAAL,CAAWW,CAAC,GAAG,CAAf,CAAhB;AACA,QAAMC,CAAC,GAAGD,CAAC,GAAG,IAAd;AACA,QAAM7C,CAAC,GAAGQ,IAAI,CAAC0B,KAAL,CAAW,CAACY,CAAC,GAAG,KAAL,IAAc,MAAzB,CAAV;AACA,QAAMd,CAAC,GAAGxB,IAAI,CAAC0B,KAAL,CAAW,SAASlC,CAApB,CAAV;AACA,QAAM+C,CAAC,GAAGvC,IAAI,CAAC0B,KAAL,CAAW,CAACY,CAAC,GAAGd,CAAL,IAAU,OAArB,CAAV;AACA,QAAM/D,GAAG,GAAG6E,CAAC,GAAGd,CAAJ,GAAQxB,IAAI,CAAC0B,KAAL,CAAWa,CAAC,GAAG,OAAf,CAApB;AACA,QAAM/E,KAAK,GAAG+E,CAAC,IAAIA,CAAC,GAAG,IAAJ,GAAW,EAAX,GAAgB,CAApB,CAAf;AACA,QAAIjE,IAAI,GAAGkB,CAAC,IAAIhC,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqB,IAAzB,CAAZ;;AACA,QAAIc,IAAI,IAAI,CAAZ,EAAe;AAAEA,MAAAA,IAAI;AAAI,KAZuB,CAYtB;;;AAC1B,WAAO,CAACA,IAAD,EAAOd,KAAP,EAAcC,GAAd,CAAP;AACD,GArQyB,CAuQ1B;;;AACUuE,EAAAA,mBAAmB,CAAElC,GAAF,EAAwB;AACnD,WAAO,CAACA,GAAG,CAAC0C,WAAJ,EAAD,EAAoB1C,GAAG,CAAC2C,QAAJ,KAAiB,CAArC,EAAwC3C,GAAG,CAAC4C,OAAJ,EAAxC,CAAP;AACD,GA1QyB,CA4Q1B;;;AACUX,EAAAA,aAAa,OAAyC;AAAA,QAAvC,CAACzD,IAAD,EAAOd,KAAP,EAAcC,GAAd,CAAuC;;AAC9D,QAAIa,IAAI,GAAG,CAAX,EAAc;AAAEA,MAAAA,IAAI;AAAI,KADsC,CACrC;AACzB;;;AACA,QAAId,KAAK,GAAG,CAAZ,EAAe;AACbA,MAAAA,KAAK,IAAI,EAAT;AACAc,MAAAA,IAAI;AACL;;AACD,QAAM+D,CAAC,GAAGrC,IAAI,CAAC0B,KAAL,CAAWpD,IAAI,GAAG,GAAlB,CAAV;AACA,QAAMgE,CAAC,GAAG,IAAID,CAAJ,GAAQrC,IAAI,CAAC0B,KAAL,CAAWW,CAAC,GAAG,CAAf,CAAlB;AACA,WAAOrC,IAAI,CAAC0B,KAAL,CAAW,UAAUpD,IAAI,GAAG,IAAjB,CAAX,IACL0B,IAAI,CAAC0B,KAAL,CAAW,WAAWlE,KAAK,GAAG,CAAnB,CAAX,CADK,GAC+BC,GAD/B,GACqC6E,CADrC,GACyC,MADhD;AAED,GAxRyB,CA0R1B;;;AACUT,EAAAA,iBAAiB,QAAuC;AAAA,QAArC,CAACvD,IAAD,EAAOd,KAAP,EAAcC,GAAd,CAAqC;AAChE,QAAMqC,GAAG,GAAG,IAAIY,IAAJ,CAASpC,IAAT,EAAed,KAAK,GAAG,CAAvB,EAA0BC,GAA1B,CAAZ;AACAqC,IAAAA,GAAG,CAAC6C,WAAJ,CAAgBrE,IAAhB,EAFgE,CAE1C;;AACtBwB,IAAAA,GAAG,CAAC8C,QAAJ,CAAa,CAAb;AACA9C,IAAAA,GAAG,CAAC+C,UAAJ,CAAe,CAAf;AACA/C,IAAAA,GAAG,CAACgD,UAAJ,CAAe,CAAf;AACAhD,IAAAA,GAAG,CAACiD,eAAJ,CAAoB,CAApB,EANgE,CAOhE;AACA;AACA;;AACAjD,IAAAA,GAAG,CAAC8C,QAAJ,CAAa9C,GAAG,CAACkD,QAAJ,KAAiB,EAAjB,GAAsBlD,GAAG,CAACkD,QAAJ,KAAiB,CAAvC,GAA2C,CAAxD;AACA,WAAOlD,GAAP;AACD,GAvSyB,CAyS1B;;;AAGUc,EAAAA,QAAQ,CAAEqC,KAAF,EAAiB1F,UAAjB,EAA6CC,KAA7C,EAA6DC,GAA7D,EAA2EyF,YAA3E,EAAmH;AACnI,QAAI3F,UAAU,YAAYH,KAA1B,EAAiC;AAC/B,UAAI,KAAKO,IAAL,KAAcJ,UAAU,CAACD,QAAX,GAAsBK,IAAxC,EAA8C;AAC5C,cAAMC,SAAS,CAACC,KAAV,CAAgBC,kBAAhB,CACHC,OADG,CACK,OADL,EACc,KAAKF,KAAL,CAAWF,IADzB,EAC+BI,OAD/B,CACuC,OADvC,EACgDR,UAAU,CAACD,QAAX,GAAsBO,KAAtB,CAA4BF,IAD5E,CAAN;AAED;;AACD,aAAO,CAACJ,UAAU,CAACe,IAAX,EAAD,EAAoBf,UAAU,CAACC,KAAX,EAApB,EAAwCD,UAAU,CAACE,GAAX,EAAxC,CAAP;AACD,KAND,MAMO;AACL,UAAI,CAAC,KAAKU,OAAL,CAAaZ,UAAb,EAAyBC,KAAzB,EAA0CC,GAA1C,EAAyDyF,YAAzD,CAAL,EAA6F;AAC3F,cAAMD,KAAK,CAAClF,OAAN,CAAc,OAAd,EAAuB,KAAKF,KAAL,CAAWF,IAAlC,CAAN;AACD;;AACD,aAAO,CAACJ,UAAD,EAAaC,KAAb,EAA8BC,GAA9B,CAAP;AACD;AACF;;AAzTyB;;;;AA4U5B,MAAMG,SAAN,CAAgB;AAad;AACe,SAARuF,QAAQ,GAAmE;AAAA,QAAjExF,IAAiE,uEAAlD,WAAkD;AAAA,QAArCyF,QAAqC,uEAAlB,EAAkB;AAChF,QAAMC,OAAO,GAAG1F,IAAI,CAAC2F,WAAL,EAAhB;AACA,QAAI5F,GAAG,GAAG,KAAK6F,SAAL,WAAkBF,OAAlB,cAA6BD,QAA7B,EAAV;;AACA,QAAI,CAAC1F,GAAD,IAAQ,KAAK8F,SAAL,CAAeH,OAAf,CAAZ,EAAqC;AACnC3F,MAAAA,GAAG,GAAG,IAAI,KAAK8F,SAAL,CAAeH,OAAf,CAAJ,CAA4BD,QAA5B,CAAN;AACA,WAAKG,SAAL,WAAkBF,OAAlB,cAA6BD,QAA7B,KAA2C1F,GAA3C;AACD;;AACD,QAAI,CAACA,GAAL,EAAU;AACR,YAAME,SAAS,CAACC,KAAV,CAAgB4F,eAAhB,CAAgC1F,OAAhC,CAAwC,OAAxC,EAAiDJ,IAAjD,CAAN;AACD;;AACD,WAAOD,GAAP;AACD,GAzBa,CA2Bd;;;AAGW,SAAJW,IAAI,CAAEd,UAAF,EAA+BC,KAA/B,EAA+CC,GAA/C,EAA6DH,QAA7D,EAAiG8F,QAAjG,EAA2H;AACpI,QAAI7F,UAAU,YAAYH,KAA1B,EAAiC;AAC/B,aAAOG,UAAU,CAACD,QAAX,GAAsBe,IAAtB,CAA2Bd,UAA3B,CAAP;AACD;;AACD,QAAMG,GAAG,GAAIJ,QAAQ,YAAY4C,YAApB,GAAmC5C,QAAnC,GAA8C,KAAK6F,QAAL,CAAc7F,QAAd,EAAwB8F,QAAxB,CAA3D;AACA,WAAO,OAAO7F,UAAP,KAAsB,WAAtB,GAAoCG,GAAG,CAACW,IAAJ,EAApC,GAAiDX,GAAG,CAACW,IAAJ,CAASd,UAAT,EAAqBC,KAArB,EAAsCC,GAAtC,CAAxD;AACD,GApCa,CAsCd;;;AACe,SAARiG,QAAQ,CAAE/F,IAAF,EAAgBgG,iBAAhB,EAAwD;AACrE,QAAMN,OAAO,GAAG1F,IAAI,CAAC2F,WAAL,EAAhB;;AACA,QAAI,KAAKE,SAAL,CAAeH,OAAf,CAAJ,EAA6B;AAC3B,YAAMzF,SAAS,CAACC,KAAV,CAAgB+F,iBAAhB,CAAkC7F,OAAlC,CAA0C,OAA1C,EAAmDJ,IAAnD,CAAN;AACD;;AACD,SAAK6F,SAAL,CAAeH,OAAf,IAA0BM,iBAA1B;AACD,GA7Ca,CA+Cd;;;AACuB,SAAhBE,gBAAgB,CAAEC,MAAF,EAAsC;AAC3D,WAAQ9G,KAAD,IACL,UAAGA,KAAH,EAAWe,OAAX,CAAmB,QAAnB,EAA8BgG,KAAD,IAA2BD,MAAM,CAACE,MAAM,CAACD,KAAD,CAAP,CAA9D,CADF;AAED,GAnDa,CAqDd;;;AAC8B,SAAvBE,uBAAuB,CAAEH,MAAF,EAAoBI,MAApB,EAAwD;AACpF,WAAQlH,KAAD,IAA2B;AAChC,UAAImH,WAAW,GAAG,EAAlB;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,aAAOpH,KAAK,GAAG,CAAf,EAAkB;AAChB,YAAMqH,KAAK,GAAGrH,KAAK,GAAG,EAAtB;AACAmH,QAAAA,WAAW,aAAME,KAAK,KAAK,CAAV,GAAc,EAAd,aAAsBP,MAAM,CAACO,KAAD,CAA5B,SAAsCH,MAAM,CAACE,KAAD,CAA5C,CAAN,SAA8DD,WAA9D,CAAX;AACAC,QAAAA,KAAK;AACLpH,QAAAA,KAAK,GAAGgD,IAAI,CAAC0B,KAAL,CAAW1E,KAAK,GAAG,EAAnB,CAAR;AACD;;AACD,UAAImH,WAAW,CAACG,OAAZ,CAAoBR,MAAM,CAAC,CAAD,CAAN,GAAYI,MAAM,CAAC,CAAD,CAAtC,MAA+C,CAAnD,EAAsD;AACpDC,QAAAA,WAAW,GAAGA,WAAW,CAACI,MAAZ,CAAmB,CAAnB,CAAd;AACD;;AACD,aAAOJ,WAAW,IAAIL,MAAM,CAAC,CAAD,CAA5B;AACD,KAbD;AAcD;;AArEa;;gBAAVlG,S,WACkC;AACpCgG,EAAAA,iBAAiB,EAAE,kCADiB;AAEpC9F,EAAAA,kBAAkB,EAAE,8BAFgB;AAGpC2F,EAAAA,eAAe,EAAE,wBAHmB;AAIpCrF,EAAAA,WAAW,EAAE,kBAJuB;AAKpCgD,EAAAA,YAAY,EAAE,mBALsB;AAMpCN,EAAAA,WAAW,EAAE;AANuB,C;;gBADlClD,S,eAUwC,E;;gBAVxCA,S,eAWoC,E;;eA+D3BA,S","sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementations of various world calendars.\r\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) April 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\ntype CompareResult = -1 | 0 | 1;\r\ntype Period = 'd' | 'm' | 'w' | 'y';\r\n\r\n// Pad a numeric value with leading zeroes.\r\nfunction pad (value: number, length: number): string {\r\n  const strValue = `${value}`\r\n  return `${'000000'.substring(0, length - strValue.length)}${strValue}`\r\n}\r\n\r\n// Generic date, based on a particular calendar.\r\nclass CDate {\r\n  private cal: BaseCalendar // eslint-disable-line no-use-before-define\r\n  private yr: number\r\n  private mn: number\r\n  private dy: number\r\n\r\n  // Create a new date in the given calendar.\r\n  constructor(calendar: BaseCalendar, date: CDate);\r\n  constructor(calendar: BaseCalendar, year: number, month: number, day: number);\r\n  constructor (calendar: BaseCalendar, yearOrDate: CDate | number, month?: number, day?: number) {\r\n    this.cal = calendar\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.cal.name !== yearOrDate.calendar().name) {\r\n        throw Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name)\r\n      }\r\n      this.yr = yearOrDate.yr\r\n      this.mn = yearOrDate.mn\r\n      this.dy = yearOrDate.dy\r\n    } else {\r\n      if (!this.cal.isValid(yearOrDate, month as number, day as number)) {\r\n        throw Calendars.local.invalidDate.replace(/\\{0\\}/, this.cal.local.name)\r\n      }\r\n      this.yr = yearOrDate\r\n      this.mn = month as number\r\n      this.dy = day as number\r\n    }\r\n  }\r\n\r\n  // Create a new date in the current calendar.\r\n  date(): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (year?: number, month?: number, day?: number): CDate {\r\n    if (typeof year === 'undefined') {\r\n      return this.cal.date(this)\r\n    }\r\n    return this.cal.date(year as number, month as number, day as number)\r\n  }\r\n\r\n  // Retrieve the calendar backing this date.\r\n  calendar (): BaseCalendar {\r\n    return this.cal\r\n  }\r\n\r\n  // Retrieve or set the year for this date.\r\n  year(value: number): CDate;\r\n  year(): number;\r\n  year (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.yr : this.set(value, 'y')\r\n  }\r\n\r\n  // Retrieve or set the month for this date.\r\n  month(value: number): CDate;\r\n  month(): number;\r\n  month (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.mn : this.set(value, 'm')\r\n  }\r\n\r\n  // Retrieve or set the day for this date.\r\n  day(value: number): CDate;\r\n  day(): number;\r\n  day (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.dy : this.set(value, 'd')\r\n  }\r\n\r\n  // Retrieve the epoch designator for this date, e.g. BCE or CE.\r\n  epoch (): string {\r\n    return this.cal.epoch(this)\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (): string {\r\n    return this.cal.formatYear(this)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear (): boolean {\r\n    return this.cal.leapYear(this)\r\n  }\r\n\r\n  // Retrieve the month of the year for this date, i.e. the month's position within a numbered year.\r\n  monthOfYear (): number {\r\n    return this.cal.monthOfYear(this)\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  weekOfYear (): number {\r\n    return this.cal.weekOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the year for this date.\r\n  daysInYear (): number {\r\n    return this.cal.daysInYear(this)\r\n  }\r\n\r\n  // Retrieve the day of the year for this date.\r\n  dayOfYear (): number {\r\n    return this.cal.dayOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  daysInMonth (): number {\r\n    return this.cal.daysInMonth(this)\r\n  }\r\n\r\n  // Retrieve the day of the week for this date.\r\n  dayOfWeek (): number {\r\n    return this.cal.dayOfWeek(this)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay (): boolean {\r\n    return this.cal.weekDay(this)\r\n  }\r\n\r\n  // Retrieve additional information about this date - contents depends on calendar.\r\n  extraInfo (): Object {\r\n    return this.cal.extraInfo(this)\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  add (offset: number, period: Period): CDate {\r\n    return this.cal.add(this, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date.\r\n  sub (offset: number, period: Period): CDate {\r\n    return this.cal.sub(this, offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (value: number, period: Period): CDate {\r\n    return this.cal.set(this, value, period)\r\n  }\r\n\r\n  // Compare this date to another date.\r\n  compareTo (date: CDate): CompareResult {\r\n    if (this.cal.name !== date.cal.name) {\r\n      throw (Calendars.local.differentCalendars)\r\n        .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, date.cal.local.name)\r\n    }\r\n    const c = (this.yr !== date.yr\n      ? this.yr - date.yr\r\n      : this.mn !== date.mn\n        ? this.monthOfYear() - date.monthOfYear()\r\n        : this.dy - date.dy)\r\n    return c < 0 ? -1 : c > 0 ? +1 : 0\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD (): number {\r\n    return this.cal.toJD(this)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    return this.cal.fromJD(jd)\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date\r\n  toJSDate (): Date {\r\n    return this.cal.toJSDate(this)\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.cal.fromJSDate(jsd)\r\n  }\r\n\r\n  // Convert to a string for display.\r\n  toString (): string {\r\n    return `${this.yr < 0 ? '-' : ''}${pad(Math.abs(this.yr), 4)}-${pad(this.mn, 2)}-${pad(this.dy, 2)} (${this.cal.name})`\r\n  }\r\n}\r\n\r\ntype SubstituteDigits = (value: number) => string;\r\ntype CalendarLocalisation = {\r\n  dateFormat: string,\r\n  dayNames: string[],\r\n  dayNamesMin: string[],\r\n  dayNamesShort: string[],\r\n  digits: SubstituteDigits | undefined,\r\n  epochs: string[],\r\n  firstDay: number,\r\n  isRTL: boolean,\r\n  monthNames: string[],\r\n  monthNamesShort: string[],\r\n  name: string,\r\n};\r\ntype DateParts = [number, number, number];\r\ntype RegionalLocalisations = {\r\n  '': CalendarLocalisation,\r\n  [index: string]: CalendarLocalisation | undefined,\r\n};\r\ntype ValidOptions = {\r\n  notDay?: boolean,\r\n  notMonth?: boolean,\r\n}\r\n\r\n// Basic functionality for all calendars. Other calendars should extend this.\r\nabstract class BaseCalendar {\r\n  // The calendar name.\r\n  readonly name: string\r\n  // Julian day number of start of calendar epoch.\r\n  protected readonly jdEpoch: number\r\n  // Days per month in a common year.\r\n  protected readonly daysPerMonth: number[]\r\n  // true if has a year zero, false if not.\r\n  protected readonly hasYearZero: boolean\r\n  // The number of months in the year.\r\n  protected readonly monthsPerYear: number\r\n  // The minimum month number.\r\n  protected readonly minMonth: number\r\n  // The first month in the year.\r\n  protected readonly firstMonth: number\r\n  // The minimum day number.\r\n  protected readonly minDay: number\r\n  // The current localisation in use.\r\n  readonly local: CalendarLocalisation\r\n\r\n  constructor (name: string, jdEpoch: number, local: CalendarLocalisation, daysPerMonth: number[],\r\n    monthsPerYear: number = 12, hasYearZero: boolean = false, minMonth: number = 1, firstMonth: number = 1, minDay: number = 1) {\r\n    this.name = name\r\n    this.jdEpoch = jdEpoch\r\n    this.daysPerMonth = daysPerMonth\r\n    this.monthsPerYear = monthsPerYear\r\n    this.hasYearZero = hasYearZero\r\n    this.minMonth = minMonth\r\n    this.firstMonth = firstMonth\r\n    this.minDay = minDay\r\n    this.local = local\r\n  }\r\n\r\n  // Create a new date within this calendar - today if no parameters given.\r\n  date(date?: CDate): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (yearOrDate?: CDate | number, month?: number, day?: number): CDate {\r\n    if (typeof yearOrDate === 'undefined') {\r\n      return this.fromJSDate(new Date(Date.now()))\r\n    }\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate('', yearOrDate)\r\n      return new CDate(this, yearOrDate)\r\n    }\r\n    this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return new CDate(this, yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  abstract leapYear(date: CDate): boolean;\r\n  abstract leapYear(year: number): boolean;\r\n\r\n  // Retrieve the epoch designator for this date.\r\n  epoch (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (y < 0 ? this.local.epochs[0] : this.local.epochs[1])\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (y < 0 ? '-' : '') + pad(Math.abs(y), 4)\r\n  }\r\n\r\n  // Retrieve the number of months in a year.\r\n  monthsInYear (yearOrDate: CDate | number): number {\r\n    yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay, { notDay: true, notMonth: true })\r\n    return this.monthsPerYear\r\n  }\r\n\r\n  // Calculate the month's ordinal position within the year - for those calendars that don't start at month 1!\r\n  monthOfYear(date: CDate): number;\r\n  monthOfYear(year: number, month: number): number;\r\n  monthOfYear (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay)\r\n    const miy = this.monthsInYear(y)\r\n    return (m + miy - this.firstMonth) % miy + this.minMonth\r\n  }\r\n\r\n  // Calculate actual month from ordinal position, starting from minMonth.\r\n  fromMonthOfYear (year: number, ord: number): number {\r\n    const m = (ord + this.firstMonth - 2 * this.minMonth) %\r\n      this.monthsInYear(year) + this.minMonth\r\n    this.validate(Calendars.local.invalidMonth, year, m, this.minDay)\r\n    return m\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  abstract weekOfYear(date: CDate): number;\r\n  abstract weekOfYear(year: number, month: number, day: number): number;\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (this.leapYear(y) ? 366 : 365)\r\n  }\r\n\r\n  // Retrieve the day of the year for a date.\r\n  dayOfYear(date: CDate): number;\r\n  dayOfYear(year: number, month: number, day: number): number;\r\n  dayOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return date.toJD() - this.date(y, this.fromMonthOfYear(y, this.minMonth), this.minDay).toJD() + 1\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  abstract daysInMonth(date: CDate): number;\r\n  abstract daysInMonth(year: number, month: number): number;\r\n\r\n  // Retrieve the number of days in a week.\r\n  daysInWeek (): number {\r\n    return 7\r\n  }\r\n\r\n  // Retrieve the day of the week for a date.\r\n  dayOfWeek(date: CDate): number;\r\n  dayOfWeek(year: number, month: number, day: number): number;\r\n  dayOfWeek (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return (Math.floor(date.toJD()) + 2) % this.daysInWeek()\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  abstract weekDay(date: CDate): boolean;\r\n  abstract weekDay(year: number, month: number, day: number): boolean;\r\n\r\n  // Retrieve additional information about a date - contents depends on calendar.\r\n  extraInfo(date: CDate): Object;\r\n  extraInfo(year: number, month: number, day: number): Object;\r\n  extraInfo (yearOrDate: CDate | number, month?: number, day?: number): Object {\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate)\r\n    } else {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    }\r\n    return {}\r\n  }\r\n\r\n  // Add period(s) to a date. Cater for no year zero.\r\n  add (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date. Cater for no year zero.\r\n  sub (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, -offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (date: CDate, value: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    const y = (period === 'y' ? value : date.year())\r\n    const m = (period === 'm' ? value : date.month())\r\n    let d = (period === 'd' ? value : date.day())\r\n    if (period === 'y' || period === 'm') {\r\n      d = Math.min(d, this.daysInMonth(y, m))\r\n    }\r\n    return date.date(y, m, d)\r\n  }\r\n\r\n  // Determine whether a date is valid for this calendar.\r\n  isValid (year: number, month: number, day: number, { notDay, notMonth }: ValidOptions = {}): boolean {\r\n    return (this.hasYearZero || year !== 0) &&\r\n      (notMonth || (month >= this.minMonth && month - this.minMonth < this.monthsInYear(year))) &&\r\n      (notDay || (day >= this.minDay && day - this.minDay < this.daysInMonth(year, month)))\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  abstract toJD(date: CDate): number;\r\n  abstract toJD(year: number, month: number, day: number): number;\r\n\r\n  // Create a new date from a Julian day number.\r\n  abstract fromJD(jd: number): CDate;\r\n\r\n  // Convert the date to a standard (Gregorian) JavaScript Date.\r\n  toJSDate(date: CDate): Date;\r\n  toJSDate(year: number, month: number, day: number): Date;\r\n  toJSDate (yearOrDate: CDate | number, month?: number, day?: number): Date {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return this.gregorianToJSDate(this.gregorianFromJD(this.date(y, m, d).toJD()))\r\n  }\r\n\r\n  // Convert the date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.fromJD(this.gregorianToJD(this.gregorianFromJSDate(jsd)))\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  protected addInternal (date: CDate, offset: number, period: Period): CDate {\r\n    const correctYear = (yr: number): number => {\r\n      if (yr === 0 && !this.hasYearZero) {\r\n        yr += Math.sign(offset)\r\n      }\r\n      return yr\r\n    }\r\n\r\n    if (period === 'd' || period === 'w') {\r\n      const jd = date.toJD() + offset * (period === 'w' ? this.daysInWeek() : 1)\r\n      return date.calendar().fromJD(jd)\r\n    }\r\n\r\n    let y: number = correctYear(date.year() + (period === 'y' ? offset : 0))\r\n    let m: number = date.monthOfYear() + (period === 'm' ? offset : 0)\r\n    let d: number = date.day()\r\n    if (period === 'y') {\r\n      if (date.month() !== this.fromMonthOfYear(y, m)) { // Hebrew\r\n        m = this.date(y, date.month(), this.minDay).monthOfYear()\r\n      }\r\n      m = Math.min(m, this.monthsInYear(y))\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    } else if (period === 'm') {\r\n      while (m < this.minMonth) {\r\n        y = correctYear(y - 1)\r\n        m += this.monthsInYear(y)\r\n      }\r\n      let yearMonths = this.monthsInYear(y)\r\n      while (m > yearMonths - 1 + this.minMonth) {\r\n        y = correctYear(y + 1)\r\n        m -= yearMonths\r\n        yearMonths = this.monthsInYear(y)\r\n      }\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    }\r\n    return date.date(y, this.fromMonthOfYear(y, m), d)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  protected gregorianFromJD (jd: number): DateParts {\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    const z = Math.floor(jd + 0.5)\r\n    let a = Math.floor((z - 1867216.25) / 36524.25)\r\n    a = z + 1 + a - Math.floor(a / 4)\r\n    const b = a + 1524\r\n    const c = Math.floor((b - 122.1) / 365.25)\r\n    const d = Math.floor(365.25 * c)\r\n    const e = Math.floor((b - d) / 30.6001)\r\n    const day = b - d - Math.floor(e * 30.6001)\r\n    const month = e - (e > 13.5 ? 13 : 1)\r\n    let year = c - (month > 2.5 ? 4716 : 4715)\r\n    if (year <= 0) { year-- } // No year zero\r\n    return [year, month, day]\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  protected gregorianFromJSDate (jsd: Date): DateParts {\r\n    return [jsd.getFullYear(), jsd.getMonth() + 1, jsd.getDate()]\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  protected gregorianToJD ([year, month, day]: DateParts): number {\r\n    if (year < 0) { year++ } // No year zero\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    if (month < 3) {\r\n      month += 12\r\n      year--\r\n    }\r\n    const a = Math.floor(year / 100)\r\n    const b = 2 - a + Math.floor(a / 4)\r\n    return Math.floor(365.25 * (year + 4716)) +\r\n      Math.floor(30.6001 * (month + 1)) + day + b - 1524.5\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date.\r\n  protected gregorianToJSDate ([year, month, day]: DateParts): Date {\r\n    const jsd = new Date(year, month - 1, day)\r\n    jsd.setFullYear(year) // < 100 adds 1900 in constructor\r\n    jsd.setHours(0)\r\n    jsd.setMinutes(0)\r\n    jsd.setSeconds(0)\r\n    jsd.setMilliseconds(0)\r\n    // Hours may be non-zero on daylight saving cut-over:\r\n    // > 12 when midnight changeover, but then cannot generate\r\n    // midnight datetime, so jump to 1AM, otherwise reset.\r\n    jsd.setHours(jsd.getHours() > 12 ? jsd.getHours() + 2 : 0)\r\n    return jsd\r\n  }\r\n\r\n  // Check that a candidate date is from the same calendar and is valid.\r\n  protected validate(error: string, date: CDate): DateParts;\r\n  protected validate(error: string, year: number, month: number, day: number, validOptions?: ValidOptions): DateParts;\r\n  protected validate (error: string, yearOrDate: CDate | number, month?: number, day?: number, validOptions?: ValidOptions): DateParts {\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.name !== yearOrDate.calendar().name) {\r\n        throw Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name)\r\n      }\r\n      return [yearOrDate.year(), yearOrDate.month(), yearOrDate.day()]\r\n    } else {\r\n      if (!this.isValid(yearOrDate, month as number, day as number, validOptions as ValidOptions)) {\r\n        throw error.replace(/\\{0\\}/, this.local.name)\r\n      }\r\n      return [yearOrDate, month as number, day as number]\r\n    }\r\n  }\r\n}\r\n\r\ntype CalendarClass = new(language: string) => BaseCalendar;\r\ntype CalendarClasses = {\r\n  [index: string]: CalendarClass,\r\n};\r\ntype CalendarMap = {\r\n  [index: string]: BaseCalendar,\r\n};\r\ntype CalendarsLocalisation = {\r\n  alreadyRegistered: string,\r\n  differentCalendars: string,\r\n  invalidCalendar: string,\r\n  invalidDate: string,\r\n  invalidMonth: string,\r\n  invalidYear: string,\r\n};\r\n\r\nclass Calendars {\r\n  static local: CalendarsLocalisation = {\r\n    alreadyRegistered: 'Calendar already registered: {0}',\r\n    differentCalendars: 'Cannot mix {0} and {1} dates',\r\n    invalidCalendar: 'Calendar {0} not found',\r\n    invalidDate: 'Invalid {0} date',\r\n    invalidMonth: 'Invalid {0} month',\r\n    invalidYear: 'Invalid {0} year'\r\n  }\n\r\n  private static calendars: CalendarClasses = {}\r\n  private static localCals: CalendarMap = {}\r\n\r\n  // Obtain a calendar implementation and localisation.\r\n  static instance (name: string = 'gregorian', language: string = ''): BaseCalendar {\r\n    const calName = name.toLowerCase()\r\n    let cal = this.localCals[`${calName}-${language}`]\r\n    if (!cal && this.calendars[calName]) {\r\n      cal = new this.calendars[calName](language)\r\n      this.localCals[`${calName}-${language}`] = cal\r\n    }\r\n    if (!cal) {\r\n      throw Calendars.local.invalidCalendar.replace(/\\{0\\}/, name)\r\n    }\r\n    return cal\r\n  }\r\n\r\n  // Create a new date - for today if no other parameters given.\r\n  static date(date?: CDate): CDate;\r\n  static date(year: number, month: number, day: number, calendar?: (BaseCalendar | string), language?: string): CDate;\r\n  static date (yearOrDate?: CDate | number, month?: number, day?: number, calendar?: (BaseCalendar | string), language?: string): CDate {\r\n    if (yearOrDate instanceof CDate) {\r\n      return yearOrDate.calendar().date(yearOrDate)\r\n    }\r\n    const cal = (calendar instanceof BaseCalendar ? calendar : this.instance(calendar, language))\r\n    return typeof yearOrDate === 'undefined' ? cal.date() : cal.date(yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Register a new calendar implementation.\r\n  static register (name: string, implementingClass: CalendarClass): void {\r\n    const calName = name.toLowerCase()\r\n    if (this.calendars[calName]) {\r\n      throw Calendars.local.alreadyRegistered.replace(/\\{0\\}/, name)\r\n    }\r\n    this.calendars[calName] = implementingClass\r\n  }\r\n\r\n  // A simple digit substitution function for localising numbers via the Calendar digits option.\r\n  static substituteDigits (digits: string[]): SubstituteDigits {\r\n    return (value: number): string =>\r\n      `${value}`.replace(/[0-9]/g, (digit: string): string => digits[Number(digit)])\r\n  }\r\n\r\n  // Digit substitution function for localising Chinese style numbers via the Calendar digits option.\r\n  static substituteChineseDigits (digits: string[], powers: string[]): SubstituteDigits {\r\n    return (value: number): string => {\r\n      let localNumber = ''\r\n      let power = 0\r\n      while (value > 0) {\r\n        const units = value % 10\r\n        localNumber = `${units === 0 ? '' : `${digits[units]}${powers[power]}`}${localNumber}`\r\n        power++\r\n        value = Math.floor(value / 10)\r\n      }\r\n      if (localNumber.indexOf(digits[1] + powers[1]) === 0) {\r\n        localNumber = localNumber.substr(1)\r\n      }\r\n      return localNumber || digits[0]\r\n    }\r\n  }\r\n}\r\n\r\nexport type { CalendarLocalisation, CompareResult, Period, RegionalLocalisations, SubstituteDigits }\r\nexport { BaseCalendar, CDate }\r\nexport default Calendars\r\n"],"file":"Calendars.js"}