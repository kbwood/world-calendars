{"version":3,"file":"Calendars.js","names":["pad","value","length","strValue","substring","CalendarError","Error","CDate","constructor","calendar","yearOrDate","month","day","cal","name","Calendars","local","differentCalendars","replace","yr","mn","dy","isValid","invalidDate","date","year","set","epoch","formatYear","leapYear","monthOfYear","weekOfYear","daysInYear","dayOfYear","daysInMonth","dayOfWeek","weekDay","extraInfo","add","offset","period","sub","compareTo","c","format","pattern","toJD","fromJD","jd","toJSDate","fromJSDate","jsd","toString","Math","abs","CalendarBase","jdEpoch","localisations","language","daysPerMonth","monthsPerYear","hasYearZero","minMonth","firstMonth","minDay","console","warn","Date","now","validate","y","invalidYear","epochs","monthsInYear","notDay","notMonth","m","invalidMonth","miy","fromMonthOfYear","ord","checkDate","floor","daysInWeek","d","addInternal","min","monthOrPattern","parse","gregorianToJSDate","gregorianFromJD","gregorianToJD","gregorianFromJSDate","correctYear","sign","yearMonths","z","a","b","e","getFullYear","getMonth","getDate","setFullYear","setHours","setMinutes","setSeconds","setMilliseconds","getHours","error","validOptions","instance","calName","toLowerCase","localCals","calendars","invalidCalendar","register","implementingClass","alreadyRegistered","localiseDigits","digits","match","Number","normaliseDigits","re","RegExp","join","indexOf","localiseChineseDigits","powers","localNumber","power","i","units","parseInt","substr","normaliseChineseDigits","charsRe","normNumber","digit","index","updateNumber","pow"],"sources":["../src/Calendars.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementations of various world calendars.\r\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) April 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\ntype CompareResult = -1 | 0 | 1;\r\ntype Period = 'd' | 'm' | 'w' | 'y';\r\n\r\n// Pad a numeric value with leading zeroes.\r\nfunction pad (value: number, length: number): string {\r\n  const strValue = `${value}`\r\n  return `${'000000'.substring(0, length - strValue.length)}${strValue}`\r\n}\r\n\r\nclass CalendarError extends Error {\r\n}\r\n\r\n// Generic date, based on a particular calendar.\r\nclass CDate {\r\n  private cal: CalendarBase // eslint-disable-line no-use-before-define\r\n  private yr: number\r\n  private mn: number\r\n  private dy: number\r\n\r\n  // Create a new date in the given calendar.\r\n  constructor(calendar: CalendarBase, date: CDate);\r\n  constructor(calendar: CalendarBase, year: number, month: number, day: number);\r\n  constructor (calendar: CalendarBase, yearOrDate: CDate | number, month?: number, day?: number) {\r\n    this.cal = calendar\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.cal.name !== yearOrDate.calendar().name) {\r\n        throw new CalendarError(Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name))\r\n      }\r\n      this.yr = yearOrDate.yr\r\n      this.mn = yearOrDate.mn\r\n      this.dy = yearOrDate.dy\r\n    } else {\r\n      if (!this.cal.isValid(yearOrDate, month as number, day as number)) {\r\n        throw new CalendarError(Calendars.local.invalidDate.replace(/\\{0\\}/, this.cal.local.name))\r\n      }\r\n      this.yr = yearOrDate\r\n      this.mn = month as number\r\n      this.dy = day as number\r\n    }\r\n  }\r\n\r\n  // Create a new date in the current calendar.\r\n  date(): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (year?: number, month?: number, day?: number): CDate {\r\n    if (typeof year === 'undefined') {\r\n      return this.cal.date(this)\r\n    }\r\n    return this.cal.date(year as number, month as number, day as number)\r\n  }\r\n\r\n  // Retrieve the calendar backing this date.\r\n  calendar (): CalendarBase {\r\n    return this.cal\r\n  }\r\n\r\n  // Retrieve or set the year for this date.\r\n  year(value: number): CDate;\r\n  year(): number;\r\n  year (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.yr : this.set(value, 'y')\r\n  }\r\n\r\n  // Retrieve or set the month for this date.\r\n  month(value: number): CDate;\r\n  month(): number;\r\n  month (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.mn : this.set(value, 'm')\r\n  }\r\n\r\n  // Retrieve or set the day for this date.\r\n  day(value: number): CDate;\r\n  day(): number;\r\n  day (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.dy : this.set(value, 'd')\r\n  }\r\n\r\n  // Retrieve the epoch designator for this date, e.g. BCE or CE.\r\n  epoch (): string {\r\n    return this.cal.epoch(this)\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (): string {\r\n    return this.cal.formatYear(this)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear (): boolean {\r\n    return this.cal.leapYear(this)\r\n  }\r\n\r\n  // Retrieve the month of the year for this date, i.e. the month's position within a numbered year.\r\n  monthOfYear (): number {\r\n    return this.cal.monthOfYear(this)\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  weekOfYear (): number {\r\n    return this.cal.weekOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the year for this date.\r\n  daysInYear (): number {\r\n    return this.cal.daysInYear(this)\r\n  }\r\n\r\n  // Retrieve the day of the year for this date.\r\n  dayOfYear (): number {\r\n    return this.cal.dayOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  daysInMonth (): number {\r\n    return this.cal.daysInMonth(this)\r\n  }\r\n\r\n  // Retrieve the day of the week for this date.\r\n  dayOfWeek (): number {\r\n    return this.cal.dayOfWeek(this)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay (): boolean {\r\n    return this.cal.weekDay(this)\r\n  }\r\n\r\n  // Retrieve additional information about this date - contents depends on calendar.\r\n  extraInfo (): Object {\r\n    return this.cal.extraInfo(this)\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  add (offset: number, period: Period): CDate {\r\n    return this.cal.add(this, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date.\r\n  sub (offset: number, period: Period): CDate {\r\n    return this.cal.sub(this, offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (value: number, period: Period): CDate {\r\n    return this.cal.set(this, value, period)\r\n  }\r\n\r\n  // Compare this date to another date.\r\n  compareTo (date: CDate): CompareResult {\r\n    if (this.cal.name !== date.cal.name) {\r\n      throw new CalendarError((Calendars.local.differentCalendars)\r\n        .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, date.cal.local.name))\r\n    }\r\n    const c = (this.yr !== date.yr\n      ? this.yr - date.yr\r\n      : this.mn !== date.mn\n        ? this.monthOfYear() - date.monthOfYear()\r\n        : this.dy - date.dy)\r\n    return c < 0 ? -1 : c > 0 ? +1 : 0\r\n  }\r\n\r\n  // Format this date.\r\n  format (pattern?: string): string {\r\n    return this.cal.format(this, pattern)\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD (): number {\r\n    return this.cal.toJD(this)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    return this.cal.fromJD(jd)\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date\r\n  toJSDate (): Date {\r\n    return this.cal.toJSDate(this)\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.cal.fromJSDate(jsd)\r\n  }\r\n\r\n  // Convert to a string for display.\r\n  toString (): string {\r\n    return `${this.yr < 0 ? '-' : ''}${pad(Math.abs(this.yr), 4)}-${pad(this.mn, 2)}-${pad(this.dy, 2)} (${this.cal.name})`\r\n  }\r\n}\r\n\r\ntype SubstituteDigits = (value: string) => string;\r\ntype CalendarLocalisation = {\r\n  dateFormat: string,\r\n  dayNames: string[],\r\n  dayNamesMin: string[],\r\n  dayNamesShort: string[],\r\n  epochs: string[],\r\n  firstDay: number,\r\n  isRTL: boolean,\r\n  localiseDigits?: SubstituteDigits,\r\n  monthNames: string[],\r\n  monthNamesShort: string[],\r\n  name: string,\r\n  normaliseDigits?: SubstituteDigits,\r\n};\r\ntype DateParts = [number, number, number];\r\ntype RegionalLocalisations = {\r\n  '': CalendarLocalisation,\r\n  [index: string]: CalendarLocalisation | undefined,\r\n};\r\ntype ValidOptions = {\r\n  notDay?: boolean,\r\n  notMonth?: boolean,\r\n}\r\n\r\n// Basic functionality for all calendars. Other calendars should extend this.\r\nabstract class CalendarBase {\r\n  // The calendar name.\r\n  readonly name: string\r\n  // Julian day number of start of calendar epoch.\r\n  protected readonly jdEpoch: number\r\n  // Days per month in a common year.\r\n  protected readonly daysPerMonth: number[]\r\n  // true if has a year zero, false if not.\r\n  protected readonly hasYearZero: boolean\r\n  // The number of months in the year.\r\n  protected readonly monthsPerYear: number\r\n  // The first month in the year.\r\n  readonly firstMonth: number\r\n  // The minimum month number.\r\n  readonly minMonth: number\r\n  // The minimum day number.\r\n  readonly minDay: number\r\n  // The current localisation in use.\r\n  readonly local: CalendarLocalisation\r\n\r\n  constructor (name: string, jdEpoch: number, localisations: RegionalLocalisations, language: string,\r\n    daysPerMonth: number[], monthsPerYear: number = 12, hasYearZero: boolean = false,\r\n    minMonth: number = 1, firstMonth: number = 1, minDay: number = 1) {\r\n    this.name = name\r\n    this.jdEpoch = jdEpoch\r\n    this.daysPerMonth = daysPerMonth\r\n    this.monthsPerYear = monthsPerYear\r\n    this.hasYearZero = hasYearZero\r\n    this.minMonth = minMonth\r\n    this.firstMonth = firstMonth\r\n    this.minDay = minDay\r\n    const local = localisations[language]\r\n    if (!local) {\r\n      console.warn(`WARNING: Gregorian localisation ${language} not found, using default`)\r\n    }\r\n    this.local = local || localisations['']\r\n  }\r\n\r\n  // Create a new date within this calendar - today if no parameters given.\r\n  date(date?: CDate): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (yearOrDate?: CDate | number, month?: number, day?: number): CDate {\r\n    if (typeof yearOrDate === 'undefined') {\r\n      return this.fromJSDate(new Date(Date.now()))\r\n    }\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate('', yearOrDate)\r\n      return new CDate(this, yearOrDate)\r\n    }\r\n    this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return new CDate(this, yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  abstract leapYear(date: CDate): boolean;\r\n  abstract leapYear(year: number): boolean;\r\n\r\n  // Retrieve the epoch designator for this date.\r\n  epoch (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (y < 0 ? this.local.epochs[0] : this.local.epochs[1])\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return pad(Math.abs(y), 4)\r\n  }\r\n\r\n  // Retrieve the number of months in a year.\r\n  monthsInYear (yearOrDate: CDate | number): number {\r\n    yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay, { notDay: true, notMonth: true })\r\n    return this.monthsPerYear\r\n  }\r\n\r\n  // Calculate the month's ordinal position within the year - for those calendars that don't start at month 1!\r\n  monthOfYear(date: CDate): number;\r\n  monthOfYear(year: number, month: number): number;\r\n  monthOfYear (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay)\r\n    const miy = this.monthsInYear(y)\r\n    return (m + miy - this.firstMonth) % miy + this.minMonth\r\n  }\r\n\r\n  // Calculate actual month from ordinal position, starting from minMonth.\r\n  fromMonthOfYear (year: number, ord: number): number {\r\n    const m = (ord + this.firstMonth - 2 * this.minMonth) %\r\n      this.monthsInYear(year) + this.minMonth\r\n    this.validate(Calendars.local.invalidMonth, year, m, this.minDay)\r\n    return m\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  weekOfYear(date: CDate): number;\r\n  weekOfYear(year: number, month: number, day: number): number;\r\n  weekOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    // Find \"Sunday\" of this week starting on \"Sunday\"\r\n    let checkDate = yearOrDate instanceof CDate\r\n      ? this.date(yearOrDate)\r\n      : this.date(yearOrDate, month as number, day as number)\r\n    checkDate = checkDate.add(-checkDate.dayOfWeek(), 'd')\r\n    return Math.floor((checkDate.dayOfYear() - 1) / this.daysInWeek()) + 1\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (this.leapYear(y) ? 366 : 365)\r\n  }\r\n\r\n  // Retrieve the day of the year for a date.\r\n  dayOfYear(date: CDate): number;\r\n  dayOfYear(year: number, month: number, day: number): number;\r\n  dayOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return date.toJD() - this.date(y, this.fromMonthOfYear(y, this.minMonth), this.minDay).toJD() + 1\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  abstract daysInMonth(date: CDate): number;\r\n  abstract daysInMonth(year: number, month: number): number;\r\n\r\n  // Retrieve the number of days in a week.\r\n  daysInWeek (): number {\r\n    return 7\r\n  }\r\n\r\n  // Retrieve the day of the week for a date.\r\n  dayOfWeek(date: CDate): number;\r\n  dayOfWeek(year: number, month: number, day: number): number;\r\n  dayOfWeek (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return (Math.floor(date.toJD()) + 2) % this.daysInWeek()\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  abstract weekDay(date: CDate): boolean;\r\n  abstract weekDay(year: number, month: number, day: number): boolean;\r\n\r\n  // Retrieve additional information about a date - contents depends on calendar.\r\n  extraInfo(date: CDate): Object;\r\n  extraInfo(year: number, month: number, day: number): Object;\r\n  extraInfo (yearOrDate: CDate | number, month?: number, day?: number): Object {\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate)\r\n    } else {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    }\r\n    return {}\r\n  }\r\n\r\n  // Add period(s) to a date. Cater for no year zero.\r\n  add (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date. Cater for no year zero.\r\n  sub (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, -offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (date: CDate, value: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    const y = (period === 'y' ? value : date.year())\r\n    const m = (period === 'm' ? value : date.month())\r\n    let d = (period === 'd' ? value : date.day())\r\n    if (period === 'y' || period === 'm') {\r\n      d = Math.min(d, this.daysInMonth(y, m))\r\n    }\r\n    return date.date(y, m, d)\r\n  }\r\n\r\n  // Format a date - see ParseFormat module.\r\n  format (date: CDate, pattern?: string): string;\r\n  format (year: number, month: number, day: number, pattern?: string): string;\r\n  // @ts-ignore: parameters aren't used - implemented elsewhere\r\n  format (yearOrDate: CDate | number, monthOrPattern: string | number | undefined, day?: number, pattern?: string): string {\r\n    throw new CalendarError('Not implemented yet - load the ParseFormat module')\r\n  }\r\n\r\n  // Parse a date - see ParseFormat module.\r\n  // @ts-ignore: parameters aren't used - implemented elsewhere\r\n  parse (value: string, pattern: string = ''): CDate {\r\n    throw new CalendarError('Not implemented yet - load the ParseFormat module')\r\n  }\r\n\r\n  // Determine whether a date is valid for this calendar.\r\n  isValid (year: number, month: number, day: number, { notDay, notMonth }: ValidOptions = {}): boolean {\r\n    return (this.hasYearZero || year !== 0) &&\r\n      (notMonth || (month >= this.minMonth && month - this.minMonth < this.monthsInYear(year))) &&\r\n      (notDay || (day >= this.minDay && day - this.minDay < this.daysInMonth(year, month)))\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  abstract toJD(date: CDate): number;\r\n  abstract toJD(year: number, month: number, day: number): number;\r\n\r\n  // Create a new date from a Julian day number.\r\n  abstract fromJD(jd: number): CDate;\r\n\r\n  // Convert the date to a standard (Gregorian) JavaScript Date.\r\n  toJSDate(date: CDate): Date;\r\n  toJSDate(year: number, month: number, day: number): Date;\r\n  toJSDate (yearOrDate: CDate | number, month?: number, day?: number): Date {\r\n    const [y, m, d] = yearOrDate instanceof CDate\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return this.gregorianToJSDate(this.gregorianFromJD(this.date(y, m, d).toJD()))\r\n  }\r\n\r\n  // Convert the date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.fromJD(this.gregorianToJD(this.gregorianFromJSDate(jsd)))\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  private addInternal (date: CDate, offset: number, period: Period): CDate {\r\n    const correctYear = (yr: number): number => {\r\n      if (yr === 0 && !this.hasYearZero) {\r\n        yr += Math.sign(offset)\r\n      }\r\n      return yr\r\n    }\r\n\r\n    if (period === 'd' || period === 'w') {\r\n      const jd = date.toJD() + offset * (period === 'w' ? this.daysInWeek() : 1)\r\n      return date.calendar().fromJD(jd)\r\n    }\r\n\r\n    let y: number = correctYear(date.year() + (period === 'y' ? offset : 0))\r\n    let m: number = date.monthOfYear() + (period === 'm' ? offset : 0)\r\n    let d: number = date.day()\r\n    if (period === 'y') {\r\n      if (date.month() !== this.fromMonthOfYear(y, m)) { // Hebrew\r\n        m = this.date(y, date.month(), this.minDay).monthOfYear()\r\n      }\r\n      m = Math.min(m, this.monthsInYear(y))\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    } else if (period === 'm') {\r\n      while (m < this.minMonth) {\r\n        y = correctYear(y - 1)\r\n        m += this.monthsInYear(y)\r\n      }\r\n      let yearMonths = this.monthsInYear(y)\r\n      while (m > yearMonths - 1 + this.minMonth) {\r\n        y = correctYear(y + 1)\r\n        m -= yearMonths\r\n        yearMonths = this.monthsInYear(y)\r\n      }\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    }\r\n    return date.date(y, this.fromMonthOfYear(y, m), d)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  protected gregorianFromJD (jd: number): DateParts {\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    const z = Math.floor(jd + 0.5)\r\n    let a = Math.floor((z - 1867216.25) / 36524.25)\r\n    a = z + 1 + a - Math.floor(a / 4)\r\n    const b = a + 1524\r\n    const c = Math.floor((b - 122.1) / 365.25)\r\n    const d = Math.floor(365.25 * c)\r\n    const e = Math.floor((b - d) / 30.6001)\r\n    const day = b - d - Math.floor(e * 30.6001)\r\n    const month = e - (e > 13.5 ? 13 : 1)\r\n    let year = c - (month > 2.5 ? 4716 : 4715)\r\n    if (year <= 0) { year-- } // No year zero\r\n    return [year, month, day]\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  protected gregorianFromJSDate (jsd: Date): DateParts {\r\n    return [jsd.getFullYear(), jsd.getMonth() + 1, jsd.getDate()]\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  protected gregorianToJD ([year, month, day]: DateParts): number {\r\n    if (year < 0) { year++ } // No year zero\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    if (month < 3) {\r\n      month += 12\r\n      year--\r\n    }\r\n    const a = Math.floor(year / 100)\r\n    const b = 2 - a + Math.floor(a / 4)\r\n    return Math.floor(365.25 * (year + 4716)) +\r\n      Math.floor(30.6001 * (month + 1)) + day + b - 1524.5\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date.\r\n  protected gregorianToJSDate ([year, month, day]: DateParts): Date {\r\n    const jsd = new Date(year, month - 1, day)\r\n    jsd.setFullYear(year) // < 100 adds 1900 in constructor\r\n    jsd.setHours(0)\r\n    jsd.setMinutes(0)\r\n    jsd.setSeconds(0)\r\n    jsd.setMilliseconds(0)\r\n    // Hours may be non-zero on daylight saving cut-over:\r\n    // > 12 when midnight changeover, but then cannot generate\r\n    // midnight datetime, so jump to 1AM, otherwise reset.\r\n    jsd.setHours(jsd.getHours() > 12 ? jsd.getHours() + 2 : 0)\r\n    return jsd\r\n  }\r\n\r\n  // Check that a candidate date is from the same calendar and is valid.\r\n  protected validate(error: string, date: CDate): DateParts;\r\n  protected validate(error: string, year: number, month: number, day: number, validOptions?: ValidOptions): DateParts;\r\n  protected validate (error: string, yearOrDate: CDate | number, month?: number, day?: number, validOptions?: ValidOptions): DateParts {\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.name !== yearOrDate.calendar().name) {\r\n        throw new CalendarError(Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name))\r\n      }\r\n      return [yearOrDate.year(), yearOrDate.month(), yearOrDate.day()]\r\n    } else {\r\n      if (!this.isValid(yearOrDate, month as number, day as number, validOptions as ValidOptions)) {\r\n        throw new CalendarError(error.replace(/\\{0\\}/, this.local.name))\r\n      }\r\n      return [yearOrDate, month as number, day as number]\r\n    }\r\n  }\r\n}\r\n\r\ntype CalendarClass = new(language: string) => CalendarBase;\r\ntype CalendarClasses = {\r\n  [index: string]: CalendarClass,\r\n};\r\ntype CalendarMap = {\r\n  [index: string]: CalendarBase,\r\n};\r\ntype CalendarsLocalisation = {\r\n  alreadyRegistered: string,\r\n  differentCalendars: string,\r\n  invalidCalendar: string,\r\n  invalidDate: string,\r\n  invalidMonth: string,\r\n  invalidYear: string,\r\n};\r\n\r\nclass Calendars {\r\n  static local: CalendarsLocalisation = {\r\n    alreadyRegistered: 'Calendar already registered: {0}',\r\n    differentCalendars: 'Cannot mix {0} and {1} dates',\r\n    invalidCalendar: 'Calendar {0} not found',\r\n    invalidDate: 'Invalid {0} date',\r\n    invalidMonth: 'Invalid {0} month',\r\n    invalidYear: 'Invalid {0} year'\r\n  }\n\r\n  private static calendars: CalendarClasses = {}\r\n  private static localCals: CalendarMap = {}\r\n\r\n  // Obtain a calendar implementation and localisation.\r\n  static instance (name: string = 'gregorian', language: string = ''): CalendarBase {\r\n    const calName = name.toLowerCase()\r\n    let cal = this.localCals[`${calName}-${language}`]\r\n    if (!cal && this.calendars[calName]) {\r\n      cal = new this.calendars[calName](language)\r\n      this.localCals[`${calName}-${language}`] = cal\r\n    }\r\n    if (!cal) {\r\n      throw new CalendarError(Calendars.local.invalidCalendar.replace(/\\{0\\}/, name))\r\n    }\r\n    return cal\r\n  }\r\n\r\n  // Create a new date - for today if no other parameters given.\r\n  static date(date?: CDate): CDate;\r\n  static date(year: number, month: number, day: number, calendar?: (CalendarBase | string), language?: string): CDate;\r\n  static date (yearOrDate?: CDate | number, month?: number, day?: number, calendar?: (CalendarBase | string), language?: string): CDate {\r\n    if (yearOrDate instanceof CDate) {\r\n      return yearOrDate.calendar().date(yearOrDate)\r\n    }\r\n    const cal = (calendar instanceof CalendarBase ? calendar : this.instance(calendar, language))\r\n    return typeof yearOrDate === 'undefined' ? cal.date() : cal.date(yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Register a new calendar implementation.\r\n  static register (name: string, implementingClass: CalendarClass): void {\r\n    const calName = name.toLowerCase()\r\n    if (this.calendars[calName]) {\r\n      throw Calendars.local.alreadyRegistered.replace(/\\{0\\}/, name)\r\n    }\r\n    this.calendars[calName] = implementingClass\r\n  }\r\n\r\n  // A simple digit substitution function for localising numbers via the Calendar localiseDigits option.\r\n  static localiseDigits (digits: string[]): SubstituteDigits {\r\n    return (value: string): string =>\r\n      value.replace(/[0-9]/g, (match: string): string => digits[Number(match)])\r\n  }\r\n\r\n  // A simple digit substitution function for restoring numbers via the Calendar localiseDigits option.\r\n  static normaliseDigits (digits: string[]): SubstituteDigits {\r\n    const re = new RegExp(`[${digits.join('')}]`, 'g')\r\n    return (value: string): string =>\r\n      value.replace(re, (match: string): string => `${digits.indexOf(match)}`)\r\n  }\r\n\r\n  // Digit substitution function for localising Chinese style numbers via the Calendar normaliseDigits option.\r\n  static localiseChineseDigits (digits: string[], powers: string[]): SubstituteDigits {\r\n    return (value: string): string => {\r\n      let localNumber = ''\r\n      let power = 0\r\n      for (let i = value.length - 1; i >= 0; i -= 1) {\r\n        const units = parseInt(value[i], 10)\r\n        localNumber = `${units === 0 ? '' : `${digits[units]}${powers[power]}`}${localNumber}`\r\n        power++\r\n      }\r\n      if (localNumber.indexOf(digits[1] + powers[1]) === 0) {\r\n        localNumber = localNumber.substr(1)\r\n      }\r\n      return localNumber || digits[0]\r\n    }\r\n  }\r\n\r\n  // Digit substitution function for restoring Chinese style numbers via the Calendar normaliseDigits option.\r\n  static normaliseChineseDigits (digits: string[], powers: string[]): SubstituteDigits {\r\n    const charsRe = new RegExp(`[${powers.join('')}${digits.join('')}]+`, 'g')\r\n    return (value: string): string =>\r\n      value.replace(charsRe, (match: string): string => {\r\n        let normNumber = 0\r\n        let digit = -1\r\n        let power = 0\r\n        let index = 0\r\n        const updateNumber = (): void => {\r\n          if (digit !== -1) {\r\n            normNumber += digit * (power === -1 ? 1 : Math.pow(10, power))\r\n          } else if (power === 1) {\r\n          // Tens value not needed if value 10-19\r\n            normNumber += 10\r\n            power = 0\r\n          }\r\n        }\r\n        while (index < match.length) {\r\n          power = powers.indexOf(match[index])\r\n          updateNumber()\r\n          digit = digits.indexOf(match[index])\r\n          index++\r\n        }\r\n        updateNumber()\r\n        return `${normNumber}`\r\n      })\r\n  }\r\n}\r\n\r\nexport type { CalendarLocalisation, CompareResult, DateParts, Period, RegionalLocalisations, SubstituteDigits, ValidOptions }\r\nexport { CalendarBase, CalendarError, CDate }\r\nexport default Calendars\r\n"],"mappings":"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"}