{"version":3,"file":"Calendars.js","names":["pad","value","length","strValue","concat","substring","CalendarError","Error","exports","CDate","constructor","calendar","yearOrDate","month","day","_defineProperty","cal","name","Calendars","local","differentCalendars","replace","yr","mn","dy","isValid","invalidDate","date","year","set","epoch","formatYear","leapYear","monthOfYear","weekOfYear","daysInYear","dayOfYear","daysInMonth","dayOfWeek","weekDay","extraInfo","add","offset","period","sub","compareTo","c","format","pattern","toJD","fromJD","jd","toJSDate","fromJSDate","jsd","toString","Math","abs","CalendarBase","jdEpoch","localisations","language","daysPerMonth","monthsPerYear","arguments","undefined","hasYearZero","minMonth","firstMonth","minDay","console","warn","Date","now","validate","y","invalidYear","epochs","monthsInYear","notDay","notMonth","m","invalidMonth","miy","fromMonthOfYear","ord","checkDate","floor","daysInWeek","d","addInternal","min","monthOrPattern","parse","gregorianToJSDate","gregorianFromJD","gregorianToJD","gregorianFromJSDate","correctYear","sign","yearMonths","z","a","b","e","getFullYear","getMonth","getDate","_ref","_ref2","setFullYear","setHours","setMinutes","setSeconds","setMilliseconds","getHours","error","validOptions","instance","calName","toLowerCase","localCals","calendars","invalidCalendar","register","implementingClass","alreadyRegistered","localiseDigits","digits","match","Number","normaliseDigits","re","RegExp","join","indexOf","localiseChineseDigits","powers","localNumber","power","i","units","parseInt","substr","normaliseChineseDigits","charsRe","normNumber","digit","index","updateNumber","pow","_default","default"],"sources":["../src/Calendars.ts"],"sourcesContent":["/* http://keith-wood.name/worldCalendars.html\r\n   Implementations of various world calendars.\r\n   Written by Keith Wood (kbwood.au{at}gmail.com) April 2022.\r\n   Available under the MIT (http://keith-wood.name/licence.html) license.\r\n   Please attribute the author if you use it. */\r\n\r\ntype CompareResult = -1 | 0 | 1;\r\ntype Period = 'd' | 'm' | 'w' | 'y';\r\n\r\n// Pad a numeric value with leading zeroes.\r\nfunction pad (value: number, length: number): string {\r\n  const strValue = `${value}`\r\n  return `${'000000'.substring(0, length - strValue.length)}${strValue}`\r\n}\r\n\r\nclass CalendarError extends Error {\r\n}\r\n\r\n// Generic date, based on a particular calendar.\r\nclass CDate {\r\n  private cal: CalendarBase // eslint-disable-line no-use-before-define\r\n  private yr: number\r\n  private mn: number\r\n  private dy: number\r\n\r\n  // Create a new date in the given calendar.\r\n  constructor(calendar: CalendarBase, date: CDate);\r\n  constructor(calendar: CalendarBase, year: number, month: number, day: number);\r\n  constructor (calendar: CalendarBase, yearOrDate: CDate | number, month?: number, day?: number) {\r\n    this.cal = calendar\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.cal.name !== yearOrDate.calendar().name) {\r\n        throw new CalendarError(Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name))\r\n      }\r\n      this.yr = yearOrDate.yr\r\n      this.mn = yearOrDate.mn\r\n      this.dy = yearOrDate.dy\r\n    } else {\r\n      if (!this.cal.isValid(yearOrDate, month as number, day as number)) {\r\n        throw new CalendarError(Calendars.local.invalidDate.replace(/\\{0\\}/, this.cal.local.name))\r\n      }\r\n      this.yr = yearOrDate\r\n      this.mn = month as number\r\n      this.dy = day as number\r\n    }\r\n  }\r\n\r\n  // Create a new date in the current calendar.\r\n  date(): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (year?: number, month?: number, day?: number): CDate {\r\n    if (typeof year === 'undefined') {\r\n      return this.cal.date(this)\r\n    }\r\n    return this.cal.date(year as number, month as number, day as number)\r\n  }\r\n\r\n  // Retrieve the calendar backing this date.\r\n  calendar (): CalendarBase {\r\n    return this.cal\r\n  }\r\n\r\n  // Retrieve or set the year for this date.\r\n  year(value: number): CDate;\r\n  year(): number;\r\n  year (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.yr : this.set(value, 'y')\r\n  }\r\n\r\n  // Retrieve or set the month for this date.\r\n  month(value: number): CDate;\r\n  month(): number;\r\n  month (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.mn : this.set(value, 'm')\r\n  }\r\n\r\n  // Retrieve or set the day for this date.\r\n  day(value: number): CDate;\r\n  day(): number;\r\n  day (value?: number): CDate | number {\r\n    return typeof value === 'undefined' ? this.dy : this.set(value, 'd')\r\n  }\r\n\r\n  // Retrieve the epoch designator for this date, e.g. BCE or CE.\r\n  epoch (): string {\r\n    return this.cal.epoch(this)\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (): string {\r\n    return this.cal.formatYear(this)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  leapYear (): boolean {\r\n    return this.cal.leapYear(this)\r\n  }\r\n\r\n  // Retrieve the month of the year for this date, i.e. the month's position within a numbered year.\r\n  monthOfYear (): number {\r\n    return this.cal.monthOfYear(this)\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  weekOfYear (): number {\r\n    return this.cal.weekOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the year for this date.\r\n  daysInYear (): number {\r\n    return this.cal.daysInYear(this)\r\n  }\r\n\r\n  // Retrieve the day of the year for this date.\r\n  dayOfYear (): number {\r\n    return this.cal.dayOfYear(this)\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  daysInMonth (): number {\r\n    return this.cal.daysInMonth(this)\r\n  }\r\n\r\n  // Retrieve the day of the week for this date.\r\n  dayOfWeek (): number {\r\n    return this.cal.dayOfWeek(this)\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  weekDay (): boolean {\r\n    return this.cal.weekDay(this)\r\n  }\r\n\r\n  // Retrieve additional information about this date - contents depends on calendar.\r\n  extraInfo (): Object {\r\n    return this.cal.extraInfo(this)\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  add (offset: number, period: Period): CDate {\r\n    return this.cal.add(this, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date.\r\n  sub (offset: number, period: Period): CDate {\r\n    return this.cal.sub(this, offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (value: number, period: Period): CDate {\r\n    return this.cal.set(this, value, period)\r\n  }\r\n\r\n  // Compare this date to another date.\r\n  compareTo (date: CDate): CompareResult {\r\n    if (this.cal.name !== date.cal.name) {\r\n      throw new CalendarError((Calendars.local.differentCalendars)\r\n        .replace(/\\{0\\}/, this.cal.local.name).replace(/\\{1\\}/, date.cal.local.name))\r\n    }\r\n    const c = (this.yr !== date.yr\r\n      ? this.yr - date.yr\r\n      : this.mn !== date.mn\r\n        ? this.monthOfYear() - date.monthOfYear()\r\n        : this.dy - date.dy)\r\n    return c < 0 ? -1 : c > 0 ? +1 : 0\r\n  }\r\n\r\n  // Format this date.\r\n  format (pattern?: string): string {\r\n    return this.cal.format(this, pattern)\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  toJD (): number {\r\n    return this.cal.toJD(this)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  fromJD (jd: number): CDate {\r\n    return this.cal.fromJD(jd)\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date\r\n  toJSDate (): Date {\r\n    return this.cal.toJSDate(this)\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.cal.fromJSDate(jsd)\r\n  }\r\n\r\n  // Convert to a string for display.\r\n  toString (): string {\r\n    return `${this.yr < 0 ? '-' : ''}${pad(Math.abs(this.yr), 4)}-${pad(this.mn, 2)}-${pad(this.dy, 2)} (${this.cal.name})`\r\n  }\r\n}\r\n\r\ntype SubstituteDigits = (value: string) => string;\r\ntype CalendarLocalisation = {\r\n  dateFormat: string,\r\n  dayNames: string[],\r\n  dayNamesMin: string[],\r\n  dayNamesShort: string[],\r\n  epochs: string[],\r\n  firstDay: number,\r\n  isRTL: boolean,\r\n  localiseDigits?: SubstituteDigits,\r\n  monthNames: string[],\r\n  monthNamesShort: string[],\r\n  name: string,\r\n  normaliseDigits?: SubstituteDigits,\r\n};\r\ntype DateParts = [number, number, number];\r\ntype RegionalLocalisations = {\r\n  '': CalendarLocalisation,\r\n  [index: string]: CalendarLocalisation | undefined,\r\n};\r\ntype ValidOptions = {\r\n  notDay?: boolean,\r\n  notMonth?: boolean,\r\n}\r\n\r\n// Basic functionality for all calendars. Other calendars should extend this.\r\nabstract class CalendarBase {\r\n  // The calendar name.\r\n  readonly name: string\r\n  // Julian day number of start of calendar epoch.\r\n  protected readonly jdEpoch: number\r\n  // Days per month in a common year.\r\n  protected readonly daysPerMonth: number[]\r\n  // true if has a year zero, false if not.\r\n  protected readonly hasYearZero: boolean\r\n  // The number of months in the year.\r\n  protected readonly monthsPerYear: number\r\n  // The first month in the year.\r\n  readonly firstMonth: number\r\n  // The minimum month number.\r\n  readonly minMonth: number\r\n  // The minimum day number.\r\n  readonly minDay: number\r\n  // The current localisation in use.\r\n  readonly local: CalendarLocalisation\r\n\r\n  constructor (name: string, jdEpoch: number, localisations: RegionalLocalisations, language: string,\r\n    daysPerMonth: number[], monthsPerYear: number = 12, hasYearZero: boolean = false,\r\n    minMonth: number = 1, firstMonth: number = 1, minDay: number = 1) {\r\n    this.name = name\r\n    this.jdEpoch = jdEpoch\r\n    this.daysPerMonth = daysPerMonth\r\n    this.monthsPerYear = monthsPerYear\r\n    this.hasYearZero = hasYearZero\r\n    this.minMonth = minMonth\r\n    this.firstMonth = firstMonth\r\n    this.minDay = minDay\r\n    const local = localisations[language]\r\n    if (!local) {\r\n      console.warn(`WARNING: Gregorian localisation ${language} not found, using default`)\r\n    }\r\n    this.local = local || localisations['']\r\n  }\r\n\r\n  // Create a new date within this calendar - today if no parameters given.\r\n  date(date?: CDate): CDate;\r\n  date(year: number, month: number, day: number): CDate;\r\n  date (yearOrDate?: CDate | number, month?: number, day?: number): CDate {\r\n    if (typeof yearOrDate === 'undefined') {\r\n      return this.fromJSDate(new Date(Date.now()))\r\n    }\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate('', yearOrDate)\r\n      return new CDate(this, yearOrDate)\r\n    }\r\n    this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return new CDate(this, yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Determine whether this date is in a leap year.\r\n  abstract leapYear(date: CDate): boolean;\r\n  abstract leapYear(year: number): boolean;\r\n\r\n  // Retrieve the epoch designator for this date.\r\n  epoch (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (y < 0 ? this.local.epochs[0] : this.local.epochs[1])\r\n  }\r\n\r\n  // Format the year, if not a simple sequential number.\r\n  formatYear (yearOrDate: CDate | number): string {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return pad(Math.abs(y), 4)\r\n  }\r\n\r\n  // Retrieve the number of months in a year.\r\n  monthsInYear (yearOrDate: CDate | number): number {\r\n    yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay, { notDay: true, notMonth: true })\r\n    return this.monthsPerYear\r\n  }\r\n\r\n  // Calculate the month's ordinal position within the year - for those calendars that don't start at month 1!\r\n  monthOfYear(date: CDate): number;\r\n  monthOfYear(year: number, month: number): number;\r\n  monthOfYear (yearOrDate: CDate | number, month?: number): number {\r\n    const [y, m] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidMonth, yearOrDate, month as number, this.minDay)\r\n    const miy = this.monthsInYear(y)\r\n    return (m + miy - this.firstMonth) % miy + this.minMonth\r\n  }\r\n\r\n  // Calculate actual month from ordinal position, starting from minMonth.\r\n  fromMonthOfYear (year: number, ord: number): number {\r\n    const m = (ord + this.firstMonth - 2 * this.minMonth) %\r\n      this.monthsInYear(year) + this.minMonth\r\n    this.validate(Calendars.local.invalidMonth, year, m, this.minDay)\r\n    return m\r\n  }\r\n\r\n  // Retrieve the week of the year for this date.\r\n  weekOfYear(date: CDate): number;\r\n  weekOfYear(year: number, month: number, day: number): number;\r\n  weekOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    // Find \"Sunday\" of this week starting on \"Sunday\"\r\n    let checkDate = yearOrDate instanceof CDate\r\n      ? this.date(yearOrDate)\r\n      : this.date(yearOrDate, month as number, day as number)\r\n    checkDate = checkDate.add(-checkDate.dayOfWeek(), 'd')\r\n    return Math.floor((checkDate.dayOfYear() - 1) / this.daysInWeek()) + 1\r\n  }\r\n\r\n  // Retrieve the number of days in a year.\r\n  daysInYear (yearOrDate: CDate | number): number {\r\n    const [y] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidYear, yearOrDate, this.minMonth, this.minDay)\r\n    return (this.leapYear(y) ? 366 : 365)\r\n  }\r\n\r\n  // Retrieve the day of the year for a date.\r\n  dayOfYear(date: CDate): number;\r\n  dayOfYear(year: number, month: number, day: number): number;\r\n  dayOfYear (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return date.toJD() - this.date(y, this.fromMonthOfYear(y, this.minMonth), this.minDay).toJD() + 1\r\n  }\r\n\r\n  // Retrieve the number of days in the month for this date.\r\n  abstract daysInMonth(date: CDate): number;\r\n  abstract daysInMonth(year: number, month: number): number;\r\n\r\n  // Retrieve the number of days in a week.\r\n  daysInWeek (): number {\r\n    return 7\r\n  }\r\n\r\n  // Retrieve the day of the week for a date.\r\n  dayOfWeek(date: CDate): number;\r\n  dayOfWeek(year: number, month: number, day: number): number;\r\n  dayOfWeek (yearOrDate: CDate | number, month?: number, day?: number): number {\r\n    const [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    const date = this.date(y, m, d)\r\n    return (Math.floor(date.toJD()) + 2) % this.daysInWeek()\r\n  }\r\n\r\n  // Determine whether this date is a week day.\r\n  abstract weekDay(date: CDate): boolean;\r\n  abstract weekDay(year: number, month: number, day: number): boolean;\r\n\r\n  // Retrieve additional information about a date - contents depends on calendar.\r\n  extraInfo(date: CDate): Object;\r\n  extraInfo(year: number, month: number, day: number): Object;\r\n  extraInfo (yearOrDate: CDate | number, month?: number, day?: number): Object {\r\n    if (yearOrDate instanceof CDate) {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate)\r\n    } else {\r\n      this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    }\r\n    return {}\r\n  }\r\n\r\n  // Add period(s) to a date. Cater for no year zero.\r\n  add (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, offset, period)\r\n  }\r\n\r\n  // Subtract period(s) from a date. Cater for no year zero.\r\n  sub (date: CDate, offset: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    return this.addInternal(date, -offset, period)\r\n  }\r\n\r\n  // Set a portion of the date.\r\n  set (date: CDate, value: number, period: Period): CDate {\r\n    this.validate('', date)\r\n    const y = (period === 'y' ? value : date.year())\r\n    const m = (period === 'm' ? value : date.month())\r\n    let d = (period === 'd' ? value : date.day())\r\n    if (period === 'y' || period === 'm') {\r\n      d = Math.min(d, this.daysInMonth(y, m))\r\n    }\r\n    return date.date(y, m, d)\r\n  }\r\n\r\n  // Format a date - see ParseFormat module.\r\n  format (date: CDate, pattern?: string): string;\r\n  format (year: number, month: number, day: number, pattern?: string): string;\r\n  // @ts-ignore: parameters aren't used - implemented elsewhere\r\n  format (yearOrDate: CDate | number, monthOrPattern: string | number | undefined, day?: number, pattern?: string): string {\r\n    throw new CalendarError('Not implemented yet - load the ParseFormat module')\r\n  }\r\n\r\n  // Parse a date - see ParseFormat module.\r\n  // @ts-ignore: parameters aren't used - implemented elsewhere\r\n  parse (value: string, pattern: string = ''): CDate {\r\n    throw new CalendarError('Not implemented yet - load the ParseFormat module')\r\n  }\r\n\r\n  // Determine whether a date is valid for this calendar.\r\n  isValid (year: number, month: number, day: number, { notDay, notMonth }: ValidOptions = {}): boolean {\r\n    return (this.hasYearZero || year !== 0) &&\r\n      (notMonth || (month >= this.minMonth && month - this.minMonth < this.monthsInYear(year))) &&\r\n      (notDay || (day >= this.minDay && day - this.minDay < this.daysInMonth(year, month)))\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  abstract toJD(date: CDate): number;\r\n  abstract toJD(year: number, month: number, day: number): number;\r\n\r\n  // Create a new date from a Julian day number.\r\n  abstract fromJD(jd: number): CDate;\r\n\r\n  // Convert the date to a standard (Gregorian) JavaScript Date.\r\n  toJSDate(date: CDate): Date;\r\n  toJSDate(year: number, month: number, day: number): Date;\r\n  toJSDate (yearOrDate: CDate | number, month?: number, day?: number): Date {\r\n    const [y, m, d] = yearOrDate instanceof CDate\r\n      ? this.validate('', yearOrDate)\r\n      : this.validate(Calendars.local.invalidDate, yearOrDate, month as number, day as number)\r\n    return this.gregorianToJSDate(this.gregorianFromJD(this.date(y, m, d).toJD()))\r\n  }\r\n\r\n  // Convert the date from a standard (Gregorian) JavaScript Date.\r\n  fromJSDate (jsd: Date): CDate {\r\n    return this.fromJD(this.gregorianToJD(this.gregorianFromJSDate(jsd)))\r\n  }\r\n\r\n  // Add period(s) to a date.\r\n  private addInternal (date: CDate, offset: number, period: Period): CDate {\r\n    const correctYear = (yr: number): number => {\r\n      if (yr === 0 && !this.hasYearZero) {\r\n        yr += Math.sign(offset)\r\n      }\r\n      return yr\r\n    }\r\n\r\n    if (period === 'd' || period === 'w') {\r\n      const jd = date.toJD() + offset * (period === 'w' ? this.daysInWeek() : 1)\r\n      return date.calendar().fromJD(jd)\r\n    }\r\n\r\n    let y: number = correctYear(date.year() + (period === 'y' ? offset : 0))\r\n    let m: number = date.monthOfYear() + (period === 'm' ? offset : 0)\r\n    let d: number = date.day()\r\n    if (period === 'y') {\r\n      if (date.month() !== this.fromMonthOfYear(y, m)) { // Hebrew\r\n        m = this.date(y, date.month(), this.minDay).monthOfYear()\r\n      }\r\n      m = Math.min(m, this.monthsInYear(y))\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    } else if (period === 'm') {\r\n      while (m < this.minMonth) {\r\n        y = correctYear(y - 1)\r\n        m += this.monthsInYear(y)\r\n      }\r\n      let yearMonths = this.monthsInYear(y)\r\n      while (m > yearMonths - 1 + this.minMonth) {\r\n        y = correctYear(y + 1)\r\n        m -= yearMonths\r\n        yearMonths = this.monthsInYear(y)\r\n      }\r\n      d = Math.min(d, this.daysInMonth(y, this.fromMonthOfYear(y, m)))\r\n    }\r\n    return date.date(y, this.fromMonthOfYear(y, m), d)\r\n  }\r\n\r\n  // Create a new date from a Julian day number.\r\n  protected gregorianFromJD (jd: number): DateParts {\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    const z = Math.floor(jd + 0.5)\r\n    let a = Math.floor((z - 1867216.25) / 36524.25)\r\n    a = z + 1 + a - Math.floor(a / 4)\r\n    const b = a + 1524\r\n    const c = Math.floor((b - 122.1) / 365.25)\r\n    const d = Math.floor(365.25 * c)\r\n    const e = Math.floor((b - d) / 30.6001)\r\n    const day = b - d - Math.floor(e * 30.6001)\r\n    const month = e - (e > 13.5 ? 13 : 1)\r\n    let year = c - (month > 2.5 ? 4716 : 4715)\r\n    if (year <= 0) { year-- } // No year zero\r\n    return [year, month, day]\r\n  }\r\n\r\n  // Create a new date from a standard (Gregorian) JavaScript Date.\r\n  protected gregorianFromJSDate (jsd: Date): DateParts {\r\n    return [jsd.getFullYear(), jsd.getMonth() + 1, jsd.getDate()]\r\n  }\r\n\r\n  // Retrieve the Julian day number equivalent for this date, i.e. days since January 1, 4713 BCE Greenwich noon.\r\n  protected gregorianToJD ([year, month, day]: DateParts): number {\r\n    if (year < 0) { year++ } // No year zero\r\n    // Jean Meeus algorithm, \"Astronomical Algorithms\", 1991\r\n    if (month < 3) {\r\n      month += 12\r\n      year--\r\n    }\r\n    const a = Math.floor(year / 100)\r\n    const b = 2 - a + Math.floor(a / 4)\r\n    return Math.floor(365.25 * (year + 4716)) +\r\n      Math.floor(30.6001 * (month + 1)) + day + b - 1524.5\r\n  }\r\n\r\n  // Convert this date to a standard (Gregorian) JavaScript Date.\r\n  protected gregorianToJSDate ([year, month, day]: DateParts): Date {\r\n    const jsd = new Date(year, month - 1, day)\r\n    jsd.setFullYear(year) // < 100 adds 1900 in constructor\r\n    jsd.setHours(0)\r\n    jsd.setMinutes(0)\r\n    jsd.setSeconds(0)\r\n    jsd.setMilliseconds(0)\r\n    // Hours may be non-zero on daylight saving cut-over:\r\n    // > 12 when midnight changeover, but then cannot generate\r\n    // midnight datetime, so jump to 1AM, otherwise reset.\r\n    jsd.setHours(jsd.getHours() > 12 ? jsd.getHours() + 2 : 0)\r\n    return jsd\r\n  }\r\n\r\n  // Check that a candidate date is from the same calendar and is valid.\r\n  protected validate(error: string, date: CDate): DateParts;\r\n  protected validate(error: string, year: number, month: number, day: number, validOptions?: ValidOptions): DateParts;\r\n  protected validate (error: string, yearOrDate: CDate | number, month?: number, day?: number, validOptions?: ValidOptions): DateParts {\r\n    if (yearOrDate instanceof CDate) {\r\n      if (this.name !== yearOrDate.calendar().name) {\r\n        throw new CalendarError(Calendars.local.differentCalendars\r\n          .replace(/\\{0\\}/, this.local.name).replace(/\\{1\\}/, yearOrDate.calendar().local.name))\r\n      }\r\n      return [yearOrDate.year(), yearOrDate.month(), yearOrDate.day()]\r\n    } else {\r\n      if (!this.isValid(yearOrDate, month as number, day as number, validOptions as ValidOptions)) {\r\n        throw new CalendarError(error.replace(/\\{0\\}/, this.local.name))\r\n      }\r\n      return [yearOrDate, month as number, day as number]\r\n    }\r\n  }\r\n}\r\n\r\ntype CalendarClass = new(language: string) => CalendarBase;\r\ntype CalendarClasses = {\r\n  [index: string]: CalendarClass,\r\n};\r\ntype CalendarMap = {\r\n  [index: string]: CalendarBase,\r\n};\r\ntype CalendarsLocalisation = {\r\n  alreadyRegistered: string,\r\n  differentCalendars: string,\r\n  invalidCalendar: string,\r\n  invalidDate: string,\r\n  invalidMonth: string,\r\n  invalidYear: string,\r\n};\r\n\r\nclass Calendars {\r\n  static local: CalendarsLocalisation = {\r\n    alreadyRegistered: 'Calendar already registered: {0}',\r\n    differentCalendars: 'Cannot mix {0} and {1} dates',\r\n    invalidCalendar: 'Calendar {0} not found',\r\n    invalidDate: 'Invalid {0} date',\r\n    invalidMonth: 'Invalid {0} month',\r\n    invalidYear: 'Invalid {0} year'\r\n  }\r\n\r\n  private static calendars: CalendarClasses = {}\r\n  private static localCals: CalendarMap = {}\r\n\r\n  // Obtain a calendar implementation and localisation.\r\n  static instance (name: string = 'gregorian', language: string = ''): CalendarBase {\r\n    const calName = name.toLowerCase()\r\n    let cal = this.localCals[`${calName}-${language}`]\r\n    if (!cal && this.calendars[calName]) {\r\n      cal = new this.calendars[calName](language)\r\n      this.localCals[`${calName}-${language}`] = cal\r\n    }\r\n    if (!cal) {\r\n      throw new CalendarError(Calendars.local.invalidCalendar.replace(/\\{0\\}/, name))\r\n    }\r\n    return cal\r\n  }\r\n\r\n  // Create a new date - for today if no other parameters given.\r\n  static date(date?: CDate): CDate;\r\n  static date(year: number, month: number, day: number, calendar?: (CalendarBase | string), language?: string): CDate;\r\n  static date (yearOrDate?: CDate | number, month?: number, day?: number, calendar?: (CalendarBase | string), language?: string): CDate {\r\n    if (yearOrDate instanceof CDate) {\r\n      return yearOrDate.calendar().date(yearOrDate)\r\n    }\r\n    const cal = (calendar instanceof CalendarBase ? calendar : this.instance(calendar, language))\r\n    return typeof yearOrDate === 'undefined' ? cal.date() : cal.date(yearOrDate, month as number, day as number)\r\n  }\r\n\r\n  // Register a new calendar implementation.\r\n  static register (name: string, implementingClass: CalendarClass): void {\r\n    const calName = name.toLowerCase()\r\n    if (this.calendars[calName]) {\r\n      throw Calendars.local.alreadyRegistered.replace(/\\{0\\}/, name)\r\n    }\r\n    this.calendars[calName] = implementingClass\r\n  }\r\n\r\n  // A simple digit substitution function for localising numbers via the Calendar localiseDigits option.\r\n  static localiseDigits (digits: string[]): SubstituteDigits {\r\n    return (value: string): string =>\r\n      value.replace(/[0-9]/g, (match: string): string => digits[Number(match)])\r\n  }\r\n\r\n  // A simple digit substitution function for restoring numbers via the Calendar localiseDigits option.\r\n  static normaliseDigits (digits: string[]): SubstituteDigits {\r\n    const re = new RegExp(`[${digits.join('')}]`, 'g')\r\n    return (value: string): string =>\r\n      value.replace(re, (match: string): string => `${digits.indexOf(match)}`)\r\n  }\r\n\r\n  // Digit substitution function for localising Chinese style numbers via the Calendar normaliseDigits option.\r\n  static localiseChineseDigits (digits: string[], powers: string[]): SubstituteDigits {\r\n    return (value: string): string => {\r\n      let localNumber = ''\r\n      let power = 0\r\n      for (let i = value.length - 1; i >= 0; i -= 1) {\r\n        const units = parseInt(value[i], 10)\r\n        localNumber = `${units === 0 ? '' : `${digits[units]}${powers[power]}`}${localNumber}`\r\n        power++\r\n      }\r\n      if (localNumber.indexOf(digits[1] + powers[1]) === 0) {\r\n        localNumber = localNumber.substr(1)\r\n      }\r\n      return localNumber || digits[0]\r\n    }\r\n  }\r\n\r\n  // Digit substitution function for restoring Chinese style numbers via the Calendar normaliseDigits option.\r\n  static normaliseChineseDigits (digits: string[], powers: string[]): SubstituteDigits {\r\n    const charsRe = new RegExp(`[${powers.join('')}${digits.join('')}]+`, 'g')\r\n    return (value: string): string =>\r\n      value.replace(charsRe, (match: string): string => {\r\n        let normNumber = 0\r\n        let digit = -1\r\n        let power = 0\r\n        let index = 0\r\n        const updateNumber = (): void => {\r\n          if (digit !== -1) {\r\n            normNumber += digit * (power === -1 ? 1 : Math.pow(10, power))\r\n          } else if (power === 1) {\r\n          // Tens value not needed if value 10-19\r\n            normNumber += 10\r\n            power = 0\r\n          }\r\n        }\r\n        while (index < match.length) {\r\n          power = powers.indexOf(match[index])\r\n          updateNumber()\r\n          digit = digits.indexOf(match[index])\r\n          index++\r\n        }\r\n        updateNumber()\r\n        return `${normNumber}`\r\n      })\r\n  }\r\n}\r\n\r\nexport type { CalendarLocalisation, CompareResult, DateParts, Period, RegionalLocalisations, SubstituteDigits, ValidOptions }\r\nexport { CalendarBase, CalendarError, CDate }\r\nexport default Calendars\r\n"],"mappings":"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","ignoreList":[]}